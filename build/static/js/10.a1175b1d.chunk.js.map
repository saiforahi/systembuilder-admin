{"version":3,"sources":["assets/icons/Showpass-show.svg","assets/icons/Hide.svg","pages/sign-in/signIn.js"],"names":["SignIn","history","useHistory","location","useLocation","useState","isRevealPwd","setIsRevealPwd","useSnackbar","enqueueSnackbar","login","closeSnackbar","PUBLIC_API","post","formLogin","values","then","res","console","log","data","success","localStorage","setItem","TOKEN","token","expires_after","Date","JSON","stringify","time","getFullYear","getMonth","getDate","getUTCHours","getMinutes","getSeconds","ROLES","roles","USER_ID","user","id","USER","push","pathname","state","from","catch","err","response","message","variant","useFormik","initialValues","email","password","validateOnChange","validateOnBlur","validate","errors","onSubmit","useEffect","registration","getItem","to","className","htmlFor","type","name","value","onChange","handleChange","required","onKeyPress","event","key","title","src","hidePwdImg","showPwdImg","onClick","prevState","label","e","target","handleSubmit","disabled","isValid","alt"],"mappings":"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","file":"static/js/10.a1175b1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Showpass-show.ab5421f5.svg\";","export default __webpack_public_path__ + \"static/media/Hide.31c620fc.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./signIn.css\";\r\nimport {\r\n  CForm,\r\n  CInputGroup,\r\n  CLabel,\r\n  CInput,\r\n  CFormText,\r\n CInputCheckbox,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport hidePwdImg from '../../assets/icons/Showpass-show.svg';\r\nimport showPwdImg from '../../assets/icons/Hide.svg';\r\nimport { Link,Redirect,useHistory } from \"react-router-dom\";\r\nimport { PUBLIC_API, ROLES, TOKEN, USER, USER_ID } from \"../../Config\";\r\nimport { useFormik } from \"formik\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nconst SignIn = () => {\r\n  let history = useHistory();\r\n  let location = useLocation()\r\n  const validate_login_form=(values)=>{\r\n    console.log(values);\r\n    const errors = {};\r\n    if (!values.email) errors.email = \"Email is required!\"\r\n    if (!values.password) errors.password = \"Password is required!\"\r\n    //if (!values.country_id) errors.country_id = \"Country is required!\"\r\n    console.log(errors);\r\n    return errors;\r\n  }\r\n  // const [password, setPwd] = useState('');\r\n  const [isRevealPwd, setIsRevealPwd] = useState(false);\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const login=()=>{  \r\n    PUBLIC_API.post('login',formLogin.values).then((res)=>{\r\n      console.log('login response',res.data)\r\n      if(res.data.success === true){\r\n        localStorage.setItem(TOKEN,res.data.token)\r\n        let expires_after = new Date()\r\n        localStorage.setItem('TOKEN', JSON.stringify({\r\n          time: new Date(expires_after.getFullYear(),expires_after.getMonth(),expires_after.getDate()+2,expires_after.getUTCHours(),expires_after.getMinutes(),expires_after.getSeconds()),\r\n          data: res.data.token\r\n        }));\r\n        localStorage.setItem(ROLES,res.data.roles)\r\n        localStorage.setItem(USER_ID,res.data.user.id)\r\n        localStorage.setItem(USER,JSON.stringify(res.data.user))\r\n        history.push({pathname:'/dashboard',state:{from:'login'}})\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err)\r\n      if(err?.response?.data?.message){\r\n        enqueueSnackbar(err.response.data.message,{variant:\"warning\"})\r\n      }\r\n      // if(err.response.status == 403){\r\n      //   enqueueSnackbar('Your account is not active yet',{variant:\"warning\"})\r\n      // }\r\n    })\r\n  }\r\n  const formLogin = useFormik({\r\n    initialValues:{\r\n      email:'',\r\n      password:''\r\n    },\r\n    validateOnChange:true,\r\n    validateOnBlur:true,\r\n    validate: validate_login_form,\r\n    onSubmit: login\r\n  })\r\n  const handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      login(formLogin.values)\r\n    }\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    if(location.state?.registration){\r\n      enqueueSnackbar('Registration Succefull, Please verify email to login', { variant: 'info' })\r\n    }\r\n  },[])\r\n  return (\r\n    <>\r\n      {localStorage.getItem(TOKEN)?<Redirect to=\"/dashboard\"/>:<div className=\"signin-content\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {/**Form section */}\r\n            <div className=\"col-lg-6 contents\">\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-8\">\r\n                  <h3 className=\"form-header\">Sign in</h3>\r\n                  <div className=\"form-holder\">\r\n                    <CForm className=\"custom-form\">\r\n                      <div className=\"mb-3\">\r\n                        <CLabel\r\n                          htmlFor=\"exampleInputEmail1\"\r\n                          className=\"custom-label-signin\"\r\n                        >\r\n                          Email\r\n                        </CLabel>\r\n                        <CInput\r\n                          type=\"email\"\r\n                          id=\"email\"\r\n                          name=\"email\"\r\n                          value={formLogin.values.email}\r\n                          onChange={formLogin.handleChange}\r\n                          aria-describedby=\"emailHelp\"\r\n                          className=\"custom-formgroup-signin\"\r\n                          required\r\n                        />\r\n                        {/* <CFormText id=\"emailHelp\">\r\n      We'll never share your email with anyone else.\r\n    </CFormText> */}\r\n                      </div>\r\n                      <div className=\"mb-3\">\r\n                        <CLabel\r\n                          htmlFor=\"exampleInputPassword1\"\r\n                          className=\"custom-label-signin\"\r\n                        >\r\n                          Password\r\n                        </CLabel>\r\n                        <div className=\"password-container\">\r\n                        <CInput\r\n                          type={isRevealPwd ? \"text\" : \"password\"}\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          value={formLogin.values.password}\r\n                          onChange={formLogin.handleChange}\r\n                          className=\"custom-formgroup-signin\"\r\n                          onKeyPress={handleKeyPress}\r\n                        />\r\n                          <img className=\"pwd-container-img\"\r\n                        title={isRevealPwd ? \"Hide password\" : \"Show password\"}\r\n                        src={isRevealPwd ? hidePwdImg : showPwdImg}\r\n                        onClick={() => setIsRevealPwd(prevState => !prevState)}\r\n                      />\r\n                      </div>\r\n                      </div>\r\n                      <div className=\"show-flex\">\r\n                        <div className=\"rem\">\r\n                          \r\n                          <CInputCheckbox\r\n                            className=\"mb-3 custom-check\"\r\n                            label=\"Remember Me\"\r\n                            id=\"remember\"\r\n                            onChange={(e) => {\r\n                              console.log(e.target);\r\n                            }}\r\n                          />\r\n                          <CLabel htmlFor=\"remember\" className=\"custom-check-label\">Remember me</CLabel>\r\n                        </div>\r\n\r\n                        <div className=\"forgot\">\r\n                          <Link className=\"forgot-link\" to=\"/forgot-password\">Forgot Password</Link>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"submit-holder\">\r\n                        <CButton type=\"button\" onClick={formLogin.handleSubmit} className=\"submit-button-signin\" disabled={!formLogin.isValid}>\r\n                          Sign in\r\n                        </CButton>\r\n                      </div>\r\n                    </CForm>\r\n                    {/**Go to register */}\r\n                    <div className=\"mb-4 mt-3\">\r\n                      <h5 className=\"final-footer-1\"><span className=\"dum-text-1\">Don't have an account?</span><Link className=\"registration-link-1\" to=\"/register\">Register</Link></h5>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/**Background imahge section */}\r\n            <div className=\"col-lg-6 no-mob-display-sign-img\">\r\n              <img\r\n                src={\"assets/bgs/sign-in-img.svg\"}\r\n                alt=\"Image\"\r\n                className=\"img-fluid img-bg\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>}\r\n    </>\r\n  );\r\n};\r\nexport default SignIn;\r\n"],"sourceRoot":""}