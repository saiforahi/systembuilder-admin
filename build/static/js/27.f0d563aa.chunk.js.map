{"version":3,"sources":["assets/icons/Showpass-show.svg","assets/icons/Hide.svg","pages/sign-up/signUp.js"],"names":["Yup","shape","first_name","min","max","required","last_name","email","Register","history","useHistory","useState","submitted","setSubmitted","avatar","setAvatar","isRevealPwd","setIsRevealPwd","isRevealConfPwd","setIsRevealConfPwd","image","setImage","responseErrors","setResponseErrors","formSignUp","useFormik","initialValues","phone","password","confirm_pass","validateOnChange","validateOnBlur","validate","values","errors","String","length","onSubmit","console","log","formData","FormData","Object","entries","key","value","append","undefined","PUBLIC_FORM_API","post","then","res","data","success","status","push","pathname","state","registration","catch","err","className","src","htmlFor","id","type","onChange","event","file","target","files","URL","createObjectURL","Array","from","map","error","idx","name","handleChange","touched","style","color","title","hidePwdImg","showPwdImg","onClick","prevState","handleSubmit","to"],"mappings":"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","file":"static/js/27.f0d563aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Showpass-show.ab5421f5.svg\";","export default __webpack_public_path__ + \"static/media/Hide.31c620fc.svg\";","import React, { useState } from \"react\";\r\nimport \"./signUp.css\";\r\nimport hidePwdImg from '../../assets/icons/Showpass-show.svg';\r\nimport showPwdImg from '../../assets/icons/Hide.svg';\r\nimport {\r\n  CForm,\r\n  CLabel,\r\n  CButton,\r\n  CInput,\r\n} from \"@coreui/react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { PUBLIC_FORM_API } from \"../../Config\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  first_name: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  last_name: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\n\r\nconst Register = () => {\r\n  let history = useHistory()\r\n  const [submitted,setSubmitted]=useState(false)\r\n  const [avatar, setAvatar] = useState()\r\n  const [isRevealPwd, setIsRevealPwd] = useState(false);\r\n  const [isRevealConfPwd, setIsRevealConfPwd] = useState(false);\r\n  const [image, setImage] = useState()\r\n  const [responseErrors,setResponseErrors]=useState(['1','2'])\r\n  const validateSignUpForm = (values) => {\r\n    const errors = {};\r\n    if (!values.first_name) errors.first_name = \"Name is required!\"\r\n    if (!values.email) errors.email = \"Email is required!\"\r\n    if (!values.password || String(values.password).length<8) errors.password = \"Password is required!\"\r\n    if (values.password != values.confirm_pass) errors.confirm_pass = \"Confirm your password\"\r\n    return errors;\r\n  }\r\n  const sign_up = (values) => {\r\n    console.log(values)\r\n    setSubmitted(true)\r\n    let formData = new FormData();\r\n    for (const [key, value] of Object.entries(formSignUp.values)) {\r\n      if (key != 'confirm_pass') {\r\n        formData.append(key, value)\r\n      }\r\n    }\r\n    if(image!=null && image!=undefined){\r\n      formData.append('profile_pic',image)\r\n    }\r\n    PUBLIC_FORM_API.post('auth/register/', formData).then((res) => {\r\n      setSubmitted(false)\r\n      if (res.data.success == 'True' && res.status == 200) {\r\n        history.push({ pathname: '/login', state: { registration: true } })\r\n      }\r\n      else{\r\n        console.log(res.data)\r\n        setResponseErrors(res.data)\r\n      }\r\n    }).catch(err=>{\r\n      setSubmitted(false)\r\n      console.log(err)\r\n    })\r\n    \r\n  }\r\n  const reset_form = () => {\r\n    formSignUp.resetForm()\r\n  }\r\n  const onImageChange = (file) => {\r\n    setAvatar(URL.createObjectURL(file))\r\n    setImage(file)\r\n  }\r\n  const formSignUp = useFormik({\r\n    initialValues: {\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      phone: '',\r\n      password: '',\r\n      confirm_pass: ''\r\n    },\r\n    //validationSchema:{SignupSchema},\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateSignUpForm,\r\n    onSubmit: sign_up\r\n  })\r\n  return (\r\n    <>\r\n      <div className=\"register-page\">\r\n        <div className=\"container\">\r\n          <h3 className=\"page-header\">Register</h3>\r\n          {/**img uplaod div */}\r\n\r\n          <div className=\"seller-pro-pic-holder\">\r\n            <div className=\"seller-profile-pic-div\">\r\n              <img src={avatar ? avatar : \"avatars/user-avatar-default.png\"} className=\"avatar-img\" />\r\n            </div>\r\n            <label htmlFor=\"propic\" className={image ? \"pro-img-up-btn mb-0 remove-img\" : \"pro-img-up-btn mb-0\"}>\r\n              {/* <!-- propic --> */}\r\n              <input\r\n                id=\"propic\"\r\n                className=\"form-control form-control-md\"\r\n                type=\"file\"\r\n                onChange={(event) => onImageChange(event.target.files[0])}\r\n              />\r\n            </label>\r\n          </div>\r\n          \r\n          {/**submit form */}\r\n          <div className=\"custom-form-holder\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-10 offset-md-1 col-sm-12 offset-sm-0\">\r\n              {Array.from(responseErrors).map((error,idx)=>{\r\n                <p key={idx}>{error}</p>\r\n              })}\r\n                <CForm className=\"custom-form-sign\">\r\n                  <div className=\"row\">\r\n                    {/**first name */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"firstName\" className=\"custom-label-2\">\r\n                        First Name *\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"first_name\"\r\n                        name=\"first_name\"\r\n                        value={formSignUp.values.first_name}\r\n                        onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"fnHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                      {formSignUp.touched.first_name && formSignUp.errors.first_name && <small style={{ color: 'red' }}>{formSignUp.errors.first_name}</small>}\r\n                    </div>\r\n                    {/**last name */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"lastName\" className=\"custom-label-2\">\r\n                        Last Name\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"last_name\"\r\n                        name=\"last_name\"\r\n                        value={formSignUp.values.last_name}\r\n                        onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"lnHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                    </div>\r\n                    {/**Email */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"email\" className=\"custom-label-2\">\r\n                        Email *\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={formSignUp.values.email}\r\n                        onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"emailHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                      {formSignUp.touched.email && formSignUp.errors.email && <small style={{ color: 'red' }}>{formSignUp.errors.email}</small>}\r\n                    </div>\r\n                    {/**Phone */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"phone\" className=\"custom-label-2\">\r\n                        Phone\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"tel\"\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        value={formSignUp.values.phone}\r\n                        onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"phoneHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                    </div>\r\n                    {/**password */}\r\n                    <div className=\"col-md-6 col-sm-12 mb-3\">\r\n                      <CLabel\r\n                        htmlFor=\"exampleInputPassword1\"\r\n                        className=\"custom-label-2\"\r\n                      >\r\n                        Password * (<small style={{ color: 'black' }}>Minimum 8 characters</small>)\r\n                      </CLabel>\r\n                      <div className=\"password-container\">\r\n                        <CInput\r\n                          type={isRevealPwd ? \"text\" : \"password\"}\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          value={formSignUp.values.password}\r\n                          onChange={formSignUp.handleChange}\r\n                          className=\"custom-formgroup-2\"\r\n                        />\r\n                        {formSignUp.touched.password && formSignUp.errors.password && <small style={{ color: 'red' }}>{formSignUp.errors.password}</small>}\r\n                        <img className=\"pwd-container-img\"\r\n                          title={isRevealPwd ? \"Hide Confirm password\" : \"Show Confirm password\"}\r\n                          src={isRevealPwd ? hidePwdImg : showPwdImg}\r\n                          onClick={() => setIsRevealPwd(prevState => !prevState)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {/*confirm password */}\r\n                    <div className=\"col-md-6 col-sm-12 mb-3\">\r\n                      <CLabel\r\n                        htmlFor=\"confirmPass\"\r\n                        className=\"custom-label-2\"\r\n                      >\r\n                        Confirm Password\r\n                      </CLabel>\r\n                      <div className=\"password-container\">\r\n                        <CInput\r\n                          type={isRevealConfPwd ? \"text\" : \"password\"}\r\n                          id=\"confirm_pass\"\r\n                          name=\"confirm_pass\"\r\n                          value={formSignUp.values.confirm_pass}\r\n                          onChange={formSignUp.handleChange}\r\n                          className=\"custom-formgroup-2\"\r\n                        />\r\n                        <img className=\"pwd-container-img\"\r\n                          title={isRevealConfPwd ? \"Hide password\" : \"Show password\"}\r\n                          src={isRevealConfPwd ? hidePwdImg : showPwdImg}\r\n                          onClick={() => setIsRevealConfPwd(prevState => !prevState)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {/*submit button */}\r\n                    <div className=\"sign-holder\">\r\n                      {submitted?<CircularProgress/>:<CButton type=\"button\" onClick={formSignUp.handleSubmit} className=\"submit-button-s\">\r\n                        Sign up\r\n                      </CButton>}\r\n                    </div>\r\n                    {/**Go to sign in */}\r\n                    <div className=\"mb-4 mt-3\">\r\n                      <h5 className=\"final-footer\"><span className=\"dum-text\">Already have an account?</span><Link className=\"registration-link\" to=\"/\">Sign in</Link></h5>\r\n                    </div>\r\n                  </div>\r\n                </CForm>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n"],"sourceRoot":""}