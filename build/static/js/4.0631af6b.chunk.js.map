{"version":3,"sources":["pages/laptops/Create.js"],"names":["Create","props","dispatch","useDispatch","history","useHistory","useState","pictures","setPictures","brands","useSelector","state","temp","Array","from","data","forEach","item","idx","push","value","id","label","name","os","options","selectedOS","setOS","storages","setStorages","selectedStorage","setSelectedStorage","memories","setMemories","selectedMemory","setSelectedMemory","processors","setProcessors","selectedProcessor","setSelectedProcessor","colors","setColors","selectedColor","setSelectedColor","price","setPrice","graphics","setGraphics","selectedGraphic","setSelectedGraphic","formCreateLaptop","useFormik","initialValues","brand","validate","values","errors","validateOnBlur","validateOnChange","onSubmit","formData","FormData","append","length","console","log","index","concat","specs","storage","memory","processor","graphic","color","JSON","stringify","FILE_API","post","then","res","status","swal","React","useEffect","API","get","className","type","onChange","handleChange","touched","classNamePrefix","isClearable","option","actionMeta","action","setFieldValue","closeMenuOnSelect","onCreateOption","push_item","event","target","withIcon","picture","imgExtension","maxFileSize","withPreview","singleImage","onClick","handleSubmit"],"mappings":"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","file":"static/js/4.0631af6b.chunk.js","sourcesContent":["import { CContainer, CFormGroup, CButtonClose, CImg, CRow, CCol, CCard, CCardHeader, CCardBody, CForm, CLabel, CInput, CButton, CSelect, CTextarea, CAlert } from '@coreui/react';\r\nimport React, { useState } from 'react'\r\nimport '../brands/brands-styles.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from \"react-select\";\r\nimport { useFormik } from 'formik';\r\nimport { FILE_API,API } from '../../Config';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Stack, Tile, SimpleSlides, AnimatedSlides } from \"react-easy-image\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { push_item } from '../../store/slices/osSlice';\r\nconst Create = (props) => {\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n    const [images, setImages] = useState([])\r\n    const [avatars, setAvatars] = useState([])\r\n    const [pictures, setPictures] = useState([])\r\n    const onDrop = picture => {\r\n        setPictures([...pictures, picture]);\r\n    };\r\n    const deleteFile = (idx) => {\r\n        const new_images = images.filter((item, index) => index !== idx);\r\n        setImages(new_images);\r\n        const new_avatars = avatars.filter((item, index) => index !== idx);\r\n        setAvatars(new_avatars);\r\n    }\r\n    const onImageChange = (file) => {\r\n        setImages([...images, file]);\r\n        setAvatars([...avatars, URL.createObjectURL(file)]);\r\n    }\r\n    // const [selectedBrand,setSelectedBrand] = useState()\r\n    const brands = useSelector(state => {\r\n        let temp = []\r\n        Array.from(state.brands.data).forEach((item, idx) => {\r\n            temp.push({ value: item.id, label: item.name, data: item })\r\n        })\r\n        return temp\r\n    })\r\n    const createlaptop = (values) => {\r\n        let formData = new FormData()\r\n        formData.append('name',values.name)\r\n        if(pictures.length>0){\r\n            formData.append('total_images',pictures[0].length)\r\n            // formData.append('images',pictures[0])\r\n            console.log('pictures',pictures[0])\r\n            for(let index=0;index<pictures[0].length;index++){\r\n                console.log('picture'.concat(index),pictures[0][index])\r\n                formData.append('image'+(index+1),pictures[0][index])\r\n            }\r\n        }\r\n        const specs ={\r\n            os : selectedOS.value,\r\n            brand: values.brand,\r\n            storage: selectedStorage.value,\r\n            memory: selectedMemory.value,\r\n            processor: selectedProcessor.value,\r\n            graphic : selectedGraphic.value,\r\n            color: selectedColor.value\r\n        }\r\n        formData.append('price',price)\r\n        formData.append('specifications',JSON.stringify(specs))\r\n        FILE_API.post('laptops/create', formData).then((res) => {\r\n            console.log(res)\r\n            if (res.status == 201) {\r\n                history.push('/dashboard/laptops')\r\n                swal('Created!', 'A new laptop Created', 'success')\r\n            }\r\n        })\r\n    }\r\n    const validateForm = (values) => {\r\n        const errors = {}\r\n        if (!values.name) errors.name = \"Name is required\"\r\n        return errors\r\n    }\r\n    const handleBrandChange = (option, actionMeta) => {\r\n        if (actionMeta.action == 'select-option') {\r\n            formCreateLaptop.setFieldValue('brand', option.value)\r\n        }\r\n    }\r\n    const os = useSelector(state => state.os.options)\r\n    const [selectedOS,setOS]=useState('')\r\n    const handleOSChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setOS(option)\r\n    }\r\n    const handleOSCreate=(value)=>{\r\n        console.log('create',value)\r\n        setOS({value:value,label:value})\r\n        dispatch(push_item(value)) \r\n    }\r\n    const [storages,setStorages] = useState([])\r\n    const [selectedStorage,setSelectedStorage]=useState('')\r\n    const handleStorageChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedStorage(option)\r\n    }\r\n    const handleStorageCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedStorage({value:value,label:value})\r\n        setStorages([...storages,{value:value,label:value}])\r\n    }\r\n    const [memories,setMemories] = useState([])\r\n    const [selectedMemory,setSelectedMemory]=useState('')\r\n    const handleMemoryChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedMemory(option)\r\n    }\r\n    const handleMemoryCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedMemory({value:value,label:value})\r\n        setMemories([...memories,{value:value,label:value}])\r\n    }\r\n    const [processors,setProcessors] = useState([])\r\n    const [selectedProcessor,setSelectedProcessor]=useState('')\r\n    const handleProcessorChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedProcessor(option)\r\n    }\r\n    const handleProcessorCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedProcessor({value:value,label:value})\r\n        setProcessors([...processors,{value:value,label:value}])\r\n    }\r\n    const [colors,setColors] = useState([])\r\n    const [selectedColor,setSelectedColor]=useState('')\r\n    const handleColorChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedColor(option)\r\n    }\r\n    const handleColorCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedColor({value:value,label:value})\r\n        setColors([...colors,{value:value,label:value}])\r\n    }\r\n    const [price,setPrice]=useState()\r\n    const [graphics,setGraphics] = useState([])\r\n    const [selectedGraphic,setSelectedGraphic]=useState('')\r\n    const handleGraphicChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedGraphic(option)\r\n    }\r\n    const handleGraphicCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedGraphic({value:value,label:value})\r\n        setGraphics([...processors,{value:value,label:value}])\r\n    }\r\n    const reset_form=()=>{\r\n        setSelectedGraphic(null)\r\n        setSelectedMemory(null)\r\n        setSelectedProcessor(null)\r\n        setSelectedStorage(null)\r\n        setOS(null)\r\n        formCreateLaptop.handleReset()\r\n        setPictures([])\r\n    }\r\n    const formCreateLaptop = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            brand: ''\r\n        },\r\n        validate: validateForm,\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n        onSubmit: createlaptop\r\n    })\r\n    function initialize(){\r\n        API.get('laptops/specification/list/storage').then(res=>{\r\n            console.log('stotrages',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setStorages(temp)\r\n        })\r\n        API.get('laptops/specification/list/memory').then(res=>{\r\n            console.log('memories',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setMemories(temp)\r\n        })\r\n        API.get('laptops/specification/list/processor').then(res=>{\r\n            console.log('processors',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setProcessors(temp)\r\n        })\r\n        API.get('laptops/specification/list/graphic').then(res=>{\r\n            console.log('graphics',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setGraphics(temp)\r\n        })\r\n        API.get('laptops/specification/list/color').then(res=>{\r\n            console.log('colors',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setColors(temp)\r\n        })\r\n    }\r\n    React.useEffect(() => {\r\n        initialize()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <CContainer>\r\n                <CRow>\r\n                    <div className=\"col-md-8 offset-md-2 col-sm-12\">\r\n                        <CCard className=\"custom-wbs-card-1\">\r\n                            <CCardHeader className=\"project-wbs-1\"> <h4 className=\"section-name-wbscreate\">Add Laptop</h4>\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CContainer>\r\n                                    <CForm>\r\n                                        <CRow>\r\n                                            {/**Brand Name */}\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Name\r\n                                                </CLabel>\r\n                                                <CInput className=\"custom-forminput-6\" id=\"name\" name=\"name\" type=\"text\" values={formCreateLaptop.values.name} onChange={formCreateLaptop.handleChange} />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Brand\r\n                                                </CLabel>\r\n                                                <Select\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    options={brands}\r\n                                                    isClearable={true}\r\n                                                    onChange={handleBrandChange}\r\n                                                />\r\n                                                {/* {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>} */}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Processor\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Operating Systems\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleProcessorChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleProcessorCreate}\r\n                                                    options={processors}\r\n                                                    value={selectedProcessor}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Operating System\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Operating Systems\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleOSChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleOSCreate}\r\n                                                    options={os}\r\n                                                    value={selectedOS}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Graphics Card\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Operating Systems\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleGraphicChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleGraphicCreate}\r\n                                                    options={graphics}\r\n                                                    value={selectedGraphic}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Storage\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Storages\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleStorageChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleStorageCreate}\r\n                                                    options={storages}\r\n                                                    value={selectedStorage}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Memory\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Memories\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleMemoryChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleMemoryCreate}\r\n                                                    options={memories}\r\n                                                    value={selectedMemory}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Color\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Memories\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleColorChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleColorCreate}\r\n                                                    options={colors}\r\n                                                    value={selectedColor}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {/* {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>} */}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Price (BDT)\r\n                                                </CLabel>\r\n                                                <CInput type=\"number\" value={price} onChange={(event)=>setPrice(event.target.value)}/>\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <ImageUploader\r\n                                                    {...props}\r\n                                                    withIcon={true}\r\n                                                    onChange={onDrop}\r\n                                                    imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\",\".jpeg\"]}\r\n                                                    maxFileSize={5242880}\r\n                                                    withPreview={true}\r\n                                                    singleImage={false}\r\n                                                />\r\n                                            </div>\r\n                                            {/**submit buttons */}\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"projectwbs-form-button-holders mt-3\">\r\n                                                    <CButton type=\"button\" onClick={formCreateLaptop.handleSubmit} className=\"create-btn-prjctwbs create-wbs\">Add</CButton>\r\n                                                    <CButton type=\"button\" className=\"create-btn-prjctwbs cancel-wbs\">Cancel</CButton>\r\n                                                </div>\r\n                                            </div>\r\n                                        </CRow>\r\n                                    </CForm>\r\n                                </CContainer>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </div>\r\n                </CRow>\r\n            </CContainer>\r\n        </>\r\n    )\r\n}\r\nexport default Create;"],"sourceRoot":""}