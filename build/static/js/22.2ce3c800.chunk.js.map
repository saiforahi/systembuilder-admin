{"version":3,"sources":["routes/DashboardRoutes.js","helper.js","containers/TheContent.js","containers/TheHeader.js","containers/TheHeaderDropdown.js","containers/TheSidebar.js","containers/_nav.js","containers/TheLayout.js"],"names":["routes","path","exact","name","component","React","lazy","user_groups","localStorage","getItem","split","has_group","group","includes","loading","className","TheContent","useState","useEffect","console","log","fallback","innerRoutes","map","route","idx","render","props","memo","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","sidebar","withSubheader","inHeader","onClick","val","changeState","TheHeaderDropdown","history","useHistory","profile_details","profile","data","inNav","direction","caret","src","profile_pic","BASE_URL","alt","first_name","placement","header","tag","color","to","divider","API","get","then","res","clear","push","catch","err","TheSidebar","show","colorScheme","onShowChange","icon","TheLayout","fetchProjectsThunk","USER_ID","fetchWbsThunk","fetchPersonalDetails","fetchProjectsForPMThunk"],"mappings":"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","file":"static/js/22.2ce3c800.chunk.js","sourcesContent":["import React from 'react';\r\nconst Dashboard = React.lazy(() => import('../pages/dashboard/Dashboard'));\r\n\r\nconst routes = [\r\n    { path: '/dashboard',exact:true, name: 'Dashboard', component: Dashboard},\r\n    { path: '/dashboard/Projects/ongoing-projects',exact:true, name: 'Ongoing Projects', component: React.lazy(()=>import('../pages/ongoing-project-details/ongoingProjectDetails'))},\r\n    { path: '/dashboard/Projects/ongoing-projects/details/:work_package_number',exact:true, name: 'Ongoing Project Details', component: React.lazy(()=>import('../pages/ongoing-project-details-view/OngoingProjectDetailsView'))},\r\n    { path: '/dashboard/Meetings',exact:true, name: 'Meetings', component: React.lazy(()=>import('../pages/meetings/Meetings'))},\r\n    {path:'/dashboard/Projects/completed-projects',exact:true,name:'Completed Projects',component:React.lazy(()=>import('../pages/completed-project/completedProject'))},\r\n    {path:'/dashboard/Projects/completed-projects/details/:work_package_number',exact:true,name:'Completed Projects details',component:React.lazy(()=>import('../pages/completed-project-details-view/CompletedProjectDetails'))},\r\n    {path:'/dashboard/Projects/create-new-project',exact:true,name:'Create New Project',component:React.lazy(()=>import('../pages/createProject/createProject'))},\r\n    {path:'/dashboard/EVMS/create',exact:true,name:'EVMS Create',component:React.lazy(()=>import('../pages/create-evms/createEVMS'))},\r\n    {path:'/dashboard/EVMS/view',exact:true,name:'EVMS View',component:React.lazy(()=>import('../pages/evms-view/evmsView'))},\r\n\r\n    {path:'/dashboard/WBS/create-wbs',exact:true,name:'WBS',component:React.lazy(()=>import('../pages/WBS-create/createWBS'))},\r\n    {path:'/dashboard/WBS/board',exact:true,name:'Board',component:React.lazy(()=>import('../pages/wbs-board/Board'))},\r\n\r\n    {path:'/dashboard/timecards',exact:true,name:'Timecards',component:React.lazy(()=>import('../pages/timecards/timeCard'))},\r\n    {path:'/dashboard/profile',exact:true,name:'Profile',component:React.lazy(()=>import('../pages/profile/profileView'))},\r\n    {path:'/dashboard/shared-documents',exact:true,name:'Shared Documents',component:React.lazy(()=>import('../pages/shared-docs/sharedDocs'))}\r\n\r\n]\r\n\r\nexport default routes","export const user_groups=()=>{\r\n    //let temp=[]\r\n    let groups = localStorage.getItem('groups').split(',')\r\n    return groups\r\n}\r\n\r\nexport const has_group=(group)=>{\r\n    let groups = user_groups()\r\n    if(groups.includes(group)){\r\n        return true\r\n    }\r\n    return false\r\n}","import React, { Suspense, useState } from 'react'\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport { CContainer, CFade } from '@coreui/react'\r\nimport {user_groups} from '../helper'\r\n// routes config\r\nimport innerRoutes from '../routes/DashboardRoutes'\r\n\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n)\r\n\r\nconst TheContent = () => {\r\n  const [groups,setGroups]=useState(user_groups())\r\n  React.useEffect(()=>{\r\n    console.log('Container mounted')\r\n  },[])\r\n  return (\r\n    <main className=\"c-main\">\r\n      <CContainer>\r\n        <Suspense fallback={loading}>\r\n          <Switch>\r\n            {innerRoutes.map((route, idx) => {\r\n              return route.component && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={props => (\r\n                    <CFade>\r\n                      <route.component {...props} />\r\n                    </CFade>\r\n                  )} />\r\n              )\r\n            })}\r\n            {/* <Redirect from=\"/\" to=\"/dashboard\" /> */}\r\n          </Switch>\r\n        </Suspense>\r\n      </CContainer>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheContent)\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CHeader,\r\n  CToggler,\r\n  CHeaderBrand,\r\n  CHeaderNav,\r\n  CHeaderNavItem,\r\n  CHeaderNavLink,\r\n  CSubheader,\r\n  CBreadcrumbRouter,\r\n  CLink\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n// routes config\r\nimport routes from '../routes/DashboardRoutes'\r\nimport { changeState } from '../store/slices/SideBarSlice'\r\nimport { \r\n  TheHeaderDropdown,\r\n  TheHeaderDropdownMssg,\r\n  TheHeaderDropdownNotif,\r\n  TheHeaderDropdownTasks\r\n}  from './index'\r\n\r\nconst TheHeader = () => {\r\n  const dispatch = useDispatch()\r\n  const sidebarShow = useSelector(state => state.sidebar.sidebarShow)\r\n\r\n  const toggleSidebar = () => {\r\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\r\n    dispatch(changeState(val))\r\n  }\r\n\r\n  const toggleSidebarMobile = () => {\r\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\r\n    dispatch(changeState(val))\r\n  }\r\n  React.useEffect(()=>{\r\n    console.log('sidebar --- ',sidebarShow)\r\n  },[])\r\n  return (\r\n    <CHeader withSubheader>\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-md-3 d-lg-none\"\r\n        onClick={toggleSidebarMobile}\r\n      />\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-3 d-md-down-none\"\r\n        onClick={toggleSidebar}\r\n      />\r\n      {/* <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\r\n      </CHeaderBrand> */}\r\n\r\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\r\n        {/* <CHeaderNavItem className=\"px-3\" >\r\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\r\n        </CHeaderNavItem> */}\r\n        {/* <CHeaderNavItem  className=\"px-3\">\r\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink>Settings</CHeaderNavLink>\r\n        </CHeaderNavItem> */}\r\n      </CHeaderNav>\r\n\r\n      <CHeaderNav className=\"px-3\">\r\n  \r\n        <TheHeaderDropdown/>\r\n      </CHeaderNav>\r\n      <CSubheader className=\"px-3 justify-content-between\">\r\n      <CBreadcrumbRouter \r\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3 custom-router\" \r\n          routes={routes} \r\n        /> \r\n      </CSubheader>\r\n\r\n    </CHeader>\r\n  )\r\n}\r\n\r\nexport default TheHeader\r\n","import React from 'react'\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CImg\r\n} from '@coreui/react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { API, BASE_URL } from '../Config';\r\nimport CIcon from '@coreui/icons-react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst TheHeaderDropdown = () => {\r\n  let history = useHistory();\r\n  const profile_details = useSelector(state=>state.profile.data)\r\n  function logout() {\r\n    API.get('auth/logout/').then((res) => {\r\n      localStorage.clear()\r\n      history.push('/')\r\n    }).catch(err => {\r\n      localStorage.clear()\r\n      history.push('/')\r\n    })\r\n\r\n  }\r\n  return (\r\n    <CDropdown\r\n      inNav\r\n      className=\"c-header-nav-items mx-2\"\r\n      direction=\"down\"\r\n    >\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <div className=\"c-avatar\">\r\n          <CImg\r\n            src={profile_details.profile_pic!=null?BASE_URL+profile_details.profile_pic:'avatars/user-avatar-default.png'}\r\n            className=\"c-avatar-img\"\r\n            alt=\"admin@bootstrapmaster.com\"\r\n          />\r\n\r\n        </div>\r\n        <span className=\"ml-2  u-name\">{profile_details.first_name}</span>\r\n      </CDropdownToggle>\r\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n        <CDropdownItem\r\n          header\r\n          tag=\"div\"\r\n          color=\"light\"\r\n          className=\"text-center drop-text\"\r\n        >\r\n          <strong>Account</strong>\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"drop-text\" to=\"/dashboard/profile\">\r\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\r\n        </CDropdownItem>\r\n\r\n\r\n        <CDropdownItem divider />\r\n        <CDropdownItem onClick={() => { logout() }} className=\"drop-text\">\r\n          <CIcon name=\"cil-account-logout\" className=\"mfe-2\" />\r\n          Log out\r\n        </CDropdownItem>\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  )\r\n}\r\n\r\nexport default TheHeaderDropdown\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './TheSidebar.css'\r\n\r\nimport {\r\n  CCreateElement,\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarNavDivider,\r\n  CSidebarNavTitle,\r\n  CSidebarMinimizer,\r\n  CSidebarNavDropdown,\r\n  CSidebarNavItem,\r\n} from '@coreui/react'\r\nimport { changeState } from '../store/slices/SideBarSlice';\r\nimport CIcon from '@coreui/icons-react'\r\nimport { has_group } from '../helper';\r\n// sidebar nav config\r\nimport navigation from './_nav'\r\n\r\nconst TheSidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const show = useSelector(state => state.sidebar.sidebarShow)\r\n  React.useEffect(()=>{\r\n    console.log('has group',has_group('pm'))\r\n  },[])\r\n  return (\r\n    <CSidebar colorScheme=\"light\"\r\n      show={show}\r\n      onShowChange={(val) => dispatch(changeState(val))}\r\n    >\r\n      <CSidebarBrand className=\"d-md-down-none custom-color\" to=\"/\">\r\n        {/* <CIcon\r\n          className=\"c-sidebar-brand-full\"\r\n          name=\"logo-negative\"\r\n          height={35}\r\n        /> */}\r\n        <span className=\"c-sidebar-brand-full name-brand1\">Pc Builder</span>\r\n\r\n        {/* <CIcon\r\n          className=\"c-sidebar-brand-minimized\"\r\n          name=\"sygnet\"\r\n          height={35}\r\n        /> */}\r\n        <span className=\"c-sidebar-brand-minimized name-brand1\">PB</span>\r\n      </CSidebarBrand>\r\n      <CSidebarNav className=\"vo-sidebar\">\r\n\r\n        {/* <CCreateElement\r\n          items={navigation}\r\n          components={{\r\n            CSidebarNavDivider,\r\n            CSidebarNavDropdown,\r\n            CSidebarNavItem,\r\n            CSidebarNavTitle\r\n          }}\r\n        /> */}\r\n        <CSidebarNavItem to=\"/dashboard\" icon=\"cil-speedometer\" name=\"Dashboard\" className=\"vo-navItem\"></CSidebarNavItem>\r\n        {/**Projects */}\r\n        <CSidebarNavDropdown icon=\"cib-ghost\" name=\"Projects\" className=\"vo-navItem\">\r\n          {has_group('pm') && <CSidebarNavItem to=\"/dashboard/Projects/create-new-project\" name=\"Create New Project\" className=\"vo-navItem\" ></CSidebarNavItem>}\r\n          <CSidebarNavItem to=\"/dashboard/Projects/ongoing-projects\" name=\"Ongoing Projects\" className=\"vo-navItem\"  ></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/Projects/completed-projects\" name=\"Completed Projects\" className=\"vo-navItem\" ></CSidebarNavItem>\r\n\r\n\r\n\r\n        </CSidebarNavDropdown>\r\n        {/**Meetings */}\r\n        <CSidebarNavItem to=\"/dashboard/meetings\" icon=\"cil-view-module\" name=\"Meetings\" className=\"vo-navItem\"></CSidebarNavItem>\r\n        {/**WBS */}\r\n        <CSidebarNavDropdown icon=\"cil-spreadsheet\" name=\"WBS\" className=\"vo-navItem\">\r\n          <CSidebarNavItem to=\"/dashboard/WBS/create-wbs\" name=\"Create WBS\" className=\"vo-navItem\"  ></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/WBS/board\" name=\"Board\" className=\"vo-navItem\" ></CSidebarNavItem>\r\n\r\n        </CSidebarNavDropdown>\r\n        {/**EVMS */}\r\n        {/* <CSidebarNavItem to=\"/dashboard/EVMS\"name=\"EVMS\" icon=\"cil-chart-line\" className=\"vo-navItem\"></CSidebarNavItem> */}\r\n        {has_group('pm') && <CSidebarNavDropdown icon=\"cil-chart-line\" name=\"EVMS\" className=\"vo-navItem\">\r\n          <CSidebarNavItem to=\"/dashboard/EVMS/create\" name=\"Create EVMS\" className=\"vo-navItem\"  ></CSidebarNavItem>\r\n          <CSidebarNavItem to=\"/dashboard/EVMS/view\" name=\"View EVMS\" className=\"vo-navItem\" ></CSidebarNavItem>\r\n        </CSidebarNavDropdown>}\r\n        {/**Profile */}\r\n        <CSidebarNavItem to=\"/dashboard/profile\" name=\"Profile\" icon=\"cil-user\" className=\"vo-navItem\"></CSidebarNavItem>\r\n\r\n        {/**Timecards */}\r\n        <CSidebarNavItem to=\"/dashboard/timecards\" name=\"Timecards\" icon=\"cil-library\" className=\"vo-navItem\"></CSidebarNavItem>\r\n\r\n        {/**Shared Docs */}\r\n        <CSidebarNavItem to=\"/dashboard/shared-documents\" name=\"Shared Documents\" icon=\"cil-folder-open\" className=\"vo-navItem\"></CSidebarNavItem>\r\n\r\n      </CSidebarNav>\r\n      <CSidebarMinimizer />\r\n    </CSidebar>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheSidebar)\r\n","import React from 'react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst _nav =  [\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Dashboard',\r\n    to: '/dashboard',\r\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\r\n    badge: {\r\n      color: 'info',\r\n      text: 'NEW',\r\n    }\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Theme']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Colors',\r\n    to: '/theme/colors',\r\n    icon: 'cil-drop',\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Typography',\r\n    to: '/theme/typography',\r\n    icon: 'cil-pencil',\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Components']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: 'Base',\r\n    route: '/base',\r\n    icon: 'cil-puzzle',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Breadcrumb',\r\n        to: '/base/breadcrumbs',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Cards',\r\n        to: '/base/cards',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Carousel',\r\n        to: '/base/carousels',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Collapse',\r\n        to: '/base/collapses',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Forms',\r\n        to: '/base/forms',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Jumbotron',\r\n        to: '/base/jumbotrons',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'List group',\r\n        to: '/base/list-groups',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Navs',\r\n        to: '/base/navs',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Navbars',\r\n        to: '/base/navbars',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Pagination',\r\n        to: '/base/paginations',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Popovers',\r\n        to: '/base/popovers',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Progress',\r\n        to: '/base/progress-bar',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Switches',\r\n        to: '/base/switches',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Tables',\r\n        to: '/base/tables',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Tabs',\r\n        to: '/base/tabs',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Tooltips',\r\n        to: '/base/tooltips',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: 'Buttons',\r\n    route: '/buttons',\r\n    icon: 'cil-cursor',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Buttons',\r\n        to: '/buttons/buttons',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Brand buttons',\r\n        to: '/buttons/brand-buttons',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Buttons groups',\r\n        to: '/buttons/button-groups',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Dropdowns',\r\n        to: '/buttons/button-dropdowns',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Charts',\r\n    to: '/charts',\r\n    icon: 'cil-chart-pie'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: 'Icons',\r\n    route: '/icons',\r\n    icon: 'cil-star',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'CoreUI Free',\r\n        to: '/icons/coreui-icons',\r\n        badge: {\r\n          color: 'success',\r\n          text: 'NEW',\r\n        },\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'CoreUI Flags',\r\n        to: '/icons/flags',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'CoreUI Brands',\r\n        to: '/icons/brands',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: 'Notifications',\r\n    route: '/notifications',\r\n    icon: 'cil-bell',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Alerts',\r\n        to: '/notifications/alerts',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Badges',\r\n        to: '/notifications/badges',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Modal',\r\n        to: '/notifications/modals',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Toaster',\r\n        to: '/notifications/toaster'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Widgets',\r\n    to: '/widgets',\r\n    icon: 'cil-calculator',\r\n    badge: {\r\n      color: 'info',\r\n      text: 'NEW',\r\n    },\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDivider'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Extras'],\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: 'Pages',\r\n    route: '/pages',\r\n    icon: 'cil-star',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Login',\r\n        to: '/login',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Register',\r\n        to: '/register',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Error 404',\r\n        to: '/404',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Error 500',\r\n        to: '/500',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Disabled',\r\n    icon: 'cil-ban',\r\n    badge: {\r\n      color: 'secondary',\r\n      text: 'NEW',\r\n    },\r\n    addLinkClass: 'c-disabled',\r\n    'disabled': true\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDivider',\r\n    className: 'm-2'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Labels']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Label danger',\r\n    to: '',\r\n    icon: {\r\n      name: 'cil-star',\r\n      className: 'text-danger'\r\n    },\r\n    label: true\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Label info',\r\n    to: '',\r\n    icon: {\r\n      name: 'cil-star',\r\n      className: 'text-info'\r\n    },\r\n    label: true\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Label warning',\r\n    to: '',\r\n    icon: {\r\n      name: 'cil-star',\r\n      className: 'text-warning'\r\n    },\r\n    label: true\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDivider',\r\n    className: 'm-2'\r\n  }\r\n]\r\n\r\nexport default _nav\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { USER_ID } from '../Config';\r\nimport { fetchPersonalDetails } from '../store/slices/ProfileSlice';\r\nimport { fetchProjectsThunk } from '../store/slices/ProjectsSlice';\r\nimport { fetchWbsThunk } from '../store/slices/WbsSlice';\r\nimport { fetchProjectsForPMThunk } from '../store/slices/ProjectsSlice';\r\nimport {\r\n  TheContent,\r\n  TheSidebar,\r\n  TheFooter,\r\n  TheHeader\r\n} from './index'\r\nimport './TheLayout.css'\r\nimport { has_group } from '../helper';\r\nconst TheLayout = () => {\r\n  const dispatch = useDispatch()\r\n  React.useEffect(()=>{\r\n    dispatch(fetchProjectsThunk(localStorage.getItem(USER_ID)))\r\n    dispatch(fetchWbsThunk(localStorage.getItem(USER_ID)))\r\n    dispatch(fetchPersonalDetails(localStorage.getItem(USER_ID)))\r\n    if(has_group('pm')) dispatch(fetchProjectsForPMThunk(localStorage.getItem(USER_ID)))\r\n  },[])\r\n  return (\r\n    <div className=\"c-app c-default-layout\">\r\n      <TheSidebar/>\r\n      <div className=\"c-wrapper\">\r\n        <TheHeader/>\r\n        <div className=\"c-body pt-10 custom-color-c-app\">\r\n          <TheContent/>\r\n        </div>\r\n        {/* <TheFooter/> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TheLayout\r\n"],"sourceRoot":""}