{"version":3,"sources":["pages/brands/CreateBrand.js"],"names":["CreateBrand","dispatch","useDispatch","history","useHistory","formCreateBrand","useFormik","initialValues","name","validate","values","errors","validateOnBlur","validateOnChange","onSubmit","API","post","then","res","console","log","status","fetchBrandsThunk","push","swal","React","useEffect","className","id","type","onChange","handleChange","touched","onClick","handleSubmit"],"mappings":"yJAAA,8GAmFeA,UAxEK,WAChB,IAAMC,EAAWC,cACbC,EAAQC,cAgBNC,EAAgBC,YAAU,CAC5BC,cAAc,CACVC,KAAK,IAETC,SATiB,SAACC,GAClB,IAAMC,EAAO,GAEb,OADID,EAAOF,OAAMG,EAAOH,KAAK,oBACtBG,GAOPC,gBAAe,EACfC,kBAAiB,EACjBC,SAtBgB,SAACJ,GACjBK,IAAIC,KAAK,gBAAgBN,GAAQO,MAAK,SAACC,GACnCC,QAAQC,IAAIF,GACG,KAAZA,EAAIG,SACHpB,EAASqB,eACTnB,EAAQoB,KAAK,qBACbC,IAAK,WAAW,sBAAsB,kBAwBlD,OANAC,IAAMC,WAAU,cAEb,IAKC,mCACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,qBAAKC,UAAU,iCAAf,SACI,eAAC,IAAD,CAAOA,UAAU,oBAAjB,UACI,eAAC,IAAD,CAAaA,UAAU,gBAAvB,cAAwC,oBAAIA,UAAU,yBAAd,6BAExC,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WAEI,sBAAKA,UAAU,iBAAf,UACI,cAAC,IAAD,CAAQA,UAAU,oBAAlB,kBAGA,cAAC,IAAD,CAAQA,UAAU,qBAAqBC,GAAG,OAAOpB,KAAK,OAAOqB,KAAK,OAAOnB,OAAQL,EAAgBK,OAAOF,KAAMsB,SAAUzB,EAAgB0B,eACvI1B,EAAgBM,OAAOH,MAAQH,EAAgB2B,QAAQxB,MAAQ,gCAAQH,EAAgBM,OAAOH,UAInG,qBAAKmB,UAAU,YAAf,SACI,sBAAKA,UAAU,sCAAf,UACI,cAAC,IAAD,CAASE,KAAK,SAASI,QAAS5B,EAAgB6B,aAAcP,UAAU,iCAAxE,0BACA,cAAC,IAAD,CAASE,KAAK,SAASF,UAAU,iCAAjC","file":"static/js/13.6e3b5753.chunk.js","sourcesContent":["import { CContainer, CRow, CCol, CCard, CCardHeader, CCardBody, CForm, CLabel, CInput, CButton, CSelect, CTextarea, CAlert } from '@coreui/react';\r\nimport React, {useState} from 'react'\r\nimport './brands-styles.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from \"react-select\";\r\nimport { useFormik } from 'formik';\r\nimport { API } from '../../Config';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { fetchBrandsThunk } from '../../store/slices/brandsSlice';\r\n\r\nconst CreateBrand = () => {\r\n    const dispatch = useDispatch()\r\n    let history=useHistory()\r\n    const createBrand = (values)=> {\r\n        API.post('brands/create',values).then((res)=>{\r\n            console.log(res)\r\n            if(res.status==200){\r\n                dispatch(fetchBrandsThunk())\r\n                history.push('/dashboard/brands')\r\n                swal('Created!','A new Brand Created','success')\r\n            }\r\n        })\r\n    }\r\n    const validateForm = (values)=> {\r\n        const errors={}\r\n        if(!values.name) errors.name=\"Name is required\"\r\n        return errors\r\n    }\r\n    const formCreateBrand=useFormik({\r\n        initialValues:{\r\n            name:''\r\n        },\r\n        validate:validateForm,\r\n        validateOnBlur:true,\r\n        validateOnChange:true,\r\n        onSubmit:createBrand\r\n    })\r\n    React.useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <CContainer>\r\n                <CRow>\r\n                    <div className=\"col-md-8 offset-md-2 col-sm-12\">\r\n                        <CCard className=\"custom-wbs-card-1\">\r\n                            <CCardHeader className=\"project-wbs-1\"> <h4 className=\"section-name-wbscreate\">Create Brand</h4>\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CContainer>\r\n                                    <CForm>\r\n                                        <CRow>\r\n                                            {/**Brand Name */}\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Name\r\n                                                </CLabel>\r\n                                                <CInput className=\"custom-forminput-6\" id=\"name\" name=\"name\" type=\"text\" values={formCreateBrand.values.name} onChange={formCreateBrand.handleChange}/>\r\n                                                {formCreateBrand.errors.name && formCreateBrand.touched.name && <small>{formCreateBrand.errors.name}</small>}\r\n                                            </div>\r\n                                            \r\n                                            {/**submit buttons */}\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"projectwbs-form-button-holders mt-3\">\r\n                                                    <CButton type=\"button\" onClick={formCreateBrand.handleSubmit} className=\"create-btn-prjctwbs create-wbs\">Create Brand</CButton>\r\n                                                    <CButton type=\"button\" className=\"create-btn-prjctwbs cancel-wbs\">Cancel</CButton>\r\n                                                </div>\r\n                                            </div>\r\n                                        </CRow>\r\n                                    </CForm>\r\n                                </CContainer>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </div>\r\n                </CRow>\r\n            </CContainer>\r\n        </>\r\n    )\r\n}\r\nexport default CreateBrand;"],"sourceRoot":""}