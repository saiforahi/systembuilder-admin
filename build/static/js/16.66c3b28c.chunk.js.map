{"version":3,"sources":["pages/processors/Create.js"],"names":["Create","props","dispatch","useDispatch","history","useHistory","useState","pictures","setPictures","brands","useSelector","state","temp","Array","from","data","forEach","item","idx","push","value","id","label","name","os","options","selectedOS","setStorages","selectedStorage","setMemories","selectedMemory","setProcessors","selectedProcessor","colors","setColors","selectedColor","setSelectedColor","price","setPrice","setGraphics","selectedGraphic","formCreateLaptop","useFormik","initialValues","brand","validate","values","errors","validateOnBlur","validateOnChange","onSubmit","formData","FormData","append","length","console","log","index","concat","specs","storage","memory","processor","graphic","color","JSON","stringify","FILE_API","post","then","res","status","fetchLaptopList","swal","React","useEffect","API","get","className","type","onChange","handleChange","touched","classNamePrefix","isClearable","option","actionMeta","action","setFieldValue","closeMenuOnSelect","onCreateOption","event","target","withIcon","picture","imgExtension","maxFileSize","withPreview","singleImage","onClick","handleSubmit"],"mappings":"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","file":"static/js/16.66c3b28c.chunk.js","sourcesContent":["import { CContainer, CFormGroup, CButtonClose, CImg, CRow, CCol, CCard, CCardHeader, CCardBody, CForm, CLabel, CInput, CButton, CSelect, CTextarea, CAlert } from '@coreui/react';\r\nimport React, { useState } from 'react'\r\nimport '../brands/brands-styles.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from \"react-select\";\r\nimport { useFormik } from 'formik';\r\nimport { FILE_API,API } from '../../Config';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Stack, Tile, SimpleSlides, AnimatedSlides } from \"react-easy-image\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { push_item } from '../../store/slices/osSlice';\r\nimport { fetchLaptopList } from '../../store/slices/laptopsSlice';\r\nconst Create = (props) => {\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n    const [images, setImages] = useState([])\r\n    const [avatars, setAvatars] = useState([])\r\n    const [pictures, setPictures] = useState([])\r\n    const onDrop = picture => {\r\n        setPictures([...pictures, picture]);\r\n    };\r\n    const deleteFile = (idx) => {\r\n        const new_images = images.filter((item, index) => index !== idx);\r\n        setImages(new_images);\r\n        const new_avatars = avatars.filter((item, index) => index !== idx);\r\n        setAvatars(new_avatars);\r\n    }\r\n    const onImageChange = (file) => {\r\n        setImages([...images, file]);\r\n        setAvatars([...avatars, URL.createObjectURL(file)]);\r\n    }\r\n    // const [selectedBrand,setSelectedBrand] = useState()\r\n    const brands = useSelector(state => {\r\n        let temp = []\r\n        Array.from(state.brands.data).forEach((item, idx) => {\r\n            temp.push({ value: item.id, label: item.name, data: item })\r\n        })\r\n        return temp\r\n    })\r\n    const createlaptop = (values) => {\r\n        let formData = new FormData()\r\n        formData.append('name',values.name)\r\n        if(pictures.length>0){\r\n            formData.append('total_images',pictures[0].length)\r\n            // formData.append('images',pictures[0])\r\n            console.log('pictures',pictures[0])\r\n            for(let index=0;index<pictures[0].length;index++){\r\n                console.log('picture'.concat(index),pictures[0][index])\r\n                formData.append('image'+(index+1),pictures[0][index])\r\n            }\r\n        }\r\n        const specs ={\r\n            os : selectedOS.value,\r\n            brand: values.brand,\r\n            storage: selectedStorage.value,\r\n            memory: selectedMemory.value,\r\n            processor: selectedProcessor.value,\r\n            graphic : selectedGraphic.value,\r\n            color: selectedColor.value\r\n        }\r\n        formData.append('price',price)\r\n        formData.append('specifications',JSON.stringify(specs))\r\n        FILE_API.post('laptops/create', formData).then((res) => {\r\n            console.log(res)\r\n            if (res.status == 201) {\r\n                dispatch(fetchLaptopList())\r\n                history.push('/dashboard/laptops')\r\n                swal('Created!', 'A new laptop Created', 'success')\r\n            }\r\n        })\r\n    }\r\n    const validateForm = (values) => {\r\n        const errors = {}\r\n        if (!values.name) errors.name = \"Name is required\"\r\n        return errors\r\n    }\r\n    const handleBrandChange = (option, actionMeta) => {\r\n        if (actionMeta.action == 'select-option') {\r\n            formCreateLaptop.setFieldValue('brand', option.value)\r\n        }\r\n    }\r\n    const os = useSelector(state => state.os.options)\r\n    const [selectedOS,setOS]=useState('')\r\n    const handleOSChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setOS(option)\r\n    }\r\n    const handleOSCreate=(value)=>{\r\n        console.log('create',value)\r\n        setOS({value:value,label:value})\r\n        dispatch(push_item(value)) \r\n    }\r\n    const [storages,setStorages] = useState([])\r\n    const [selectedStorage,setSelectedStorage]=useState('')\r\n    const handleStorageChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedStorage(option)\r\n    }\r\n    const handleStorageCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedStorage({value:value,label:value})\r\n        setStorages([...storages,{value:value,label:value}])\r\n    }\r\n    const [memories,setMemories] = useState([])\r\n    const [selectedMemory,setSelectedMemory]=useState('')\r\n    const handleMemoryChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedMemory(option)\r\n    }\r\n    const handleMemoryCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedMemory({value:value,label:value})\r\n        setMemories([...memories,{value:value,label:value}])\r\n    }\r\n    const [processors,setProcessors] = useState([])\r\n    const [selectedProcessor,setSelectedProcessor]=useState('')\r\n    const handleProcessorChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedProcessor(option)\r\n    }\r\n    const handleProcessorCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedProcessor({value:value,label:value})\r\n        setProcessors([...processors,{value:value,label:value}])\r\n    }\r\n    const [colors,setColors] = useState([])\r\n    const [selectedColor,setSelectedColor]=useState('')\r\n    const handleColorChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedColor(option)\r\n    }\r\n    const handleColorCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedColor({value:value,label:value})\r\n        setColors([...colors,{value:value,label:value}])\r\n    }\r\n    const [price,setPrice]=useState()\r\n    const [graphics,setGraphics] = useState([])\r\n    const [selectedGraphic,setSelectedGraphic]=useState('')\r\n    const handleGraphicChange = (option,value,actionMeta) => {\r\n        console.log(option,value)\r\n        setSelectedGraphic(option)\r\n    }\r\n    const handleGraphicCreate=(value)=>{\r\n        console.log('create',value)\r\n        setSelectedGraphic({value:value,label:value})\r\n        setGraphics([...processors,{value:value,label:value}])\r\n    }\r\n    const reset_form=()=>{\r\n        setSelectedGraphic(null)\r\n        setSelectedMemory(null)\r\n        setSelectedProcessor(null)\r\n        setSelectedStorage(null)\r\n        setOS(null)\r\n        formCreateLaptop.handleReset()\r\n        setPictures([])\r\n    }\r\n    const formCreateLaptop = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            brand: ''\r\n        },\r\n        validate: validateForm,\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n        onSubmit: createlaptop\r\n    })\r\n    function initialize(){\r\n        API.get('laptops/specification/list/storage').then(res=>{\r\n            console.log('stotrages',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setStorages(temp)\r\n        })\r\n        API.get('laptops/specification/list/memory').then(res=>{\r\n            console.log('memories',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setMemories(temp)\r\n        })\r\n        API.get('laptops/specification/list/processor').then(res=>{\r\n            console.log('processors',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setProcessors(temp)\r\n        })\r\n        API.get('laptops/specification/list/graphic').then(res=>{\r\n            console.log('graphics',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setGraphics(temp)\r\n        })\r\n        API.get('laptops/specification/list/color').then(res=>{\r\n            console.log('colors',res.data)\r\n            let temp=[]\r\n            Array.from(res.data.data).forEach((item,idx)=>{\r\n                temp.push({value:item,label:item})\r\n            })\r\n            setColors(temp)\r\n        })\r\n    }\r\n    React.useEffect(() => {\r\n        initialize()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <CContainer>\r\n                <CRow>\r\n                    <div className=\"col-md-8 offset-md-2 col-sm-12\">\r\n                        <CCard className=\"custom-wbs-card-1\">\r\n                            <CCardHeader className=\"project-wbs-1\"> <h4 className=\"section-name-wbscreate\">Add Processor</h4>\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CContainer>\r\n                                    <CForm>\r\n                                        <CRow>\r\n                                            {/**Brand Name */}\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Name\r\n                                                </CLabel>\r\n                                                <CInput className=\"custom-forminput-6\" id=\"name\" name=\"name\" type=\"text\" values={formCreateLaptop.values.name} onChange={formCreateLaptop.handleChange} />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Brand\r\n                                                </CLabel>\r\n                                                <Select\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    options={brands}\r\n                                                    isClearable={true}\r\n                                                    onChange={handleBrandChange}\r\n                                                />\r\n                                                {/* {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>} */}\r\n                                            </div>\r\n                                            {/* <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Processor\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Operating Systems\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleProcessorChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleProcessorCreate}\r\n                                                    options={processors}\r\n                                                    value={selectedProcessor}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div> */}\r\n                                            {/* <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Operating System\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Operating Systems\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleOSChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleOSCreate}\r\n                                                    options={os}\r\n                                                    value={selectedOS}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div> */}\r\n                                            {/* <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Graphics Card\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Operating Systems\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleGraphicChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleGraphicCreate}\r\n                                                    options={graphics}\r\n                                                    value={selectedGraphic}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div> */}\r\n                                            {/* <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Storage\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Storages\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleStorageChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleStorageCreate}\r\n                                                    options={storages}\r\n                                                    value={selectedStorage}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div> */}\r\n                                            {/* <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Memory\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Memories\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleMemoryChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleMemoryCreate}\r\n                                                    options={memories}\r\n                                                    value={selectedMemory}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div> */}\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Color\r\n                                                </CLabel>\r\n                                                <CreatableSelect\r\n                                                    aria-labelledby=\"Memories\"\r\n                                                    closeMenuOnSelect={true}\r\n                                                    classNamePrefix=\"custom-forminput-6\"\r\n                                                    onChange={handleColorChange}\r\n                                                    // onInputChange={handleOSInputChange}\r\n                                                    onCreateOption={handleColorCreate}\r\n                                                    options={colors}\r\n                                                    value={selectedColor}\r\n                                                    isClearable={true}\r\n                                                />\r\n                                                {/* {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>} */}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <CLabel className=\"custom-label-wbs5\">\r\n                                                    Price (BDT)\r\n                                                </CLabel>\r\n                                                <CInput type=\"number\" value={price} onChange={(event)=>setPrice(event.target.value)}/>\r\n                                                {formCreateLaptop.errors.name && formCreateLaptop.touched.name && <small>{formCreateLaptop.errors.name}</small>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-12 mb-3\">\r\n                                                <ImageUploader\r\n                                                    {...props}\r\n                                                    withIcon={true}\r\n                                                    onChange={onDrop}\r\n                                                    imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\",\".jpeg\"]}\r\n                                                    maxFileSize={5242880}\r\n                                                    withPreview={true}\r\n                                                    singleImage={false}\r\n                                                />\r\n                                            </div>\r\n                                            {/**submit buttons */}\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"projectwbs-form-button-holders mt-3\">\r\n                                                    <CButton type=\"button\" onClick={formCreateLaptop.handleSubmit} className=\"create-btn-prjctwbs create-wbs\">Add</CButton>\r\n                                                    <CButton type=\"button\" className=\"create-btn-prjctwbs cancel-wbs\">Cancel</CButton>\r\n                                                </div>\r\n                                            </div>\r\n                                        </CRow>\r\n                                    </CForm>\r\n                                </CContainer>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </div>\r\n                </CRow>\r\n            </CContainer>\r\n        </>\r\n    )\r\n}\r\nexport default Create;"],"sourceRoot":""}