{"version":3,"sources":["components/header/MatAppbar.js","components/header/Header.js","components/sidebar/MatSideBar.js","assets/icons/dashboard-icon.svg","components/scheduledMeetings/scheduledMeets.js","components/evms/evmsTable.js","components/projects-table/projectsTable.js","components/assignedProjects/assignedProjects.js","pages/dashboard/Dashboard.js"],"names":["styled","MuiAppBar","shouldForwardProp","prop","theme","open","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","drawerWidth","width","enteringScreen","position","borderRadius","shape","alpha","palette","common","white","marginRight","spacing","breakpoints","up","padding","height","pointerEvents","display","alignItems","justifyContent","InputBase","color","paddingLeft","openedMixin","overflowX","closedMixin","mixins","toolbar","marginBottom","MuiDrawer","flexShrink","whiteSpace","boxSizing","makeStyles","root","maxWidth","nested","ScheduleMeetings","dispatch","useDispatch","meeting","useSelector","state","data","React","useEffect","fetchMeetingList","localStorage","getItem","USER_ID","className","undefined","slice","map","item","idx","room_id","project","task_delivery_order","start_time","length","evmsView","ProjectsTableDashboard","history","useHistory","projects","fetchProjectsThunk","Array","from","work_package_number","onClick","push","pathname","AssignedProjectsDashboard","wbs","fetchUserWiseWbsThunk","task_title","planned_delivery_date","Dashboard","location","useLocation","useSnackbar","enqueueSnackbar","closeSnackbar","console","log","variant","memo"],"mappings":"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","file":"static/js/19.97c4e1f5.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { styled, alpha } from '@material-ui/core/styles';\r\n//import AppBar from '@material-ui/core/AppBar';\r\nimport MuiAppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { drawerWidth } from '../../Config';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeState } from '../../store/slices/DrawerSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  backgroundColor:\"#fff\",\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n  }),\r\n}));\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MatAppbar() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const open = useSelector(state=>state.drawer.open)\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const dispatch = useDispatch()\r\n  let history = useHistory()\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  function logout(){\r\n    localStorage.clear()\r\n    history.push('/')\r\n  }\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    dispatch(changeState(true))\r\n  };\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={()=>{logout()}}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"show 17 new notifications\"\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" open={open}>\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"default\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            sx={{\r\n                marginRight: '36px',\r\n                ...(open && { display: 'none' }),\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}\r\n            color=\"default\"\r\n          >\r\n            Material-UI\r\n          </Typography> */}\r\n          {/* <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </Search> */}\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"default\">\r\n              <Badge badgeContent={4} color=\"error\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"default\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"default\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"default\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport MuiAppBar from '@material-ui/core/AppBar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeState } from '../../store/slices/DrawerSlice';\r\nimport { changeUserDropdownMenuState } from '../../store/slices/ConfigSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { drawerWidth } from '../../Config';\r\nimport MatAppbar from './MatAppbar';\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nexport default function Header() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const open = useSelector(state => state.drawer.open)\r\n    const user_menu = useSelector(state=>state.config.user_dropdown_header_menu_show)\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n    const handleDrawerOpen = () => {\r\n        dispatch(changeState(true))\r\n    };\r\n    const handleClose = () => {\r\n        dispatch(changeUserDropdownMenuState(false))\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    return (\r\n        // <React.Fragment>\r\n        //     <AppBar position=\"fixed\" open={open}>\r\n        //         <Grid\r\n        //             container\r\n        //             direction=\"row\"\r\n        //             justifyContent=\"space-between\"\r\n        //             alignItems=\"center\"\r\n        //             spacing={{ xs: 2, md: 3 }}\r\n        //             columns={{ xs: 4, sm: 8, md: 12 }}\r\n        //         >\r\n        //             <Grid item xs={11} md={11}>\r\n        //                 <Toolbar sx={{ justifyContent: 'space-between' }}>\r\n        //                     <IconButton\r\n        //                         color=\"inherit\"\r\n        //                         aria-label=\"open drawer\"\r\n        //                         onClick={handleDrawerOpen}\r\n        //                         edge=\"start\"\r\n        //                         sx={{\r\n        //                             marginRight: '36px',\r\n        //                             ...(open && { display: 'none' }),\r\n        //                         }}\r\n        //                     >\r\n        //                         <MenuIcon />\r\n        //                     </IconButton>\r\n        //                     {/* <Typography variant=\"h6\" noWrap component=\"div\">\r\n        //                     Header\r\n        //                 </Typography> */}\r\n        //                 </Toolbar>\r\n        //             </Grid>\r\n        //             <Grid item xs={1} md={1} justifyContent=\"flex-end\">\r\n        //                 <ImageAvatars />\r\n        //             </Grid>\r\n        //         </Grid>\r\n        //         <Menu\r\n        //             anchorEl={anchorEl}\r\n        //             open={user_menu}\r\n        //             onClick={handleClose}\r\n        //             onClose={handleClose}\r\n        //             PaperProps={{\r\n        //                 elevation: 0,\r\n        //                 sx: {\r\n        //                     overflow: 'visible',\r\n        //                     filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n        //                     mt: 1.5,\r\n        //                     '& .MuiAvatar-root': {\r\n        //                         width: 32,\r\n        //                         height: 32,\r\n        //                         ml: -0.5,\r\n        //                         mr: 1,\r\n        //                     },\r\n        //                     '&:before': {\r\n        //                         content: '\"\"',\r\n        //                         display: 'block',\r\n        //                         position: 'absolute',\r\n        //                         top: 0,\r\n        //                         right: 14,\r\n        //                         width: 10,\r\n        //                         height: 10,\r\n        //                         bgcolor: 'background.paper',\r\n        //                         transform: 'translateY(-50%) rotate(45deg)',\r\n        //                         zIndex: 0,\r\n        //                     },\r\n        //                 },\r\n        //             }}\r\n        //             transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n        //             anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n        //         >\r\n        //             {/* <MenuItem>\r\n        //                 <Avatar /> Profile\r\n        //             </MenuItem>\r\n        //             <MenuItem>\r\n        //                 <Avatar /> My account\r\n        //             </MenuItem>\r\n        //             <Divider />\r\n        //             <MenuItem>\r\n        //                 <ListItemIcon>\r\n        //                     <PersonAdd fontSize=\"small\" />\r\n        //                 </ListItemIcon>\r\n        //                 Add another account\r\n        //             </MenuItem> */}\r\n        //             <MenuItem>\r\n        //                 <ListItemIcon>\r\n        //                     <Settings fontSize=\"small\" />\r\n        //                 </ListItemIcon>\r\n        //                 Settings\r\n        //             </MenuItem>\r\n        //             <MenuItem onClick={()=>{logout()}}>\r\n        //                 <ListItemIcon>\r\n        //                     <Logout fontSize=\"small\" />\r\n        //                 </ListItemIcon>\r\n        //                 Logout\r\n        //             </MenuItem>\r\n        //         </Menu>\r\n        //     </AppBar>\r\n        // </React.Fragment>\r\n        <MatAppbar/>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { styled, useTheme } from \"@material-ui/core/styles\";\r\nimport MuiDrawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeState } from \"../../store/slices/DrawerSlice\";\r\nimport { drawerWidth } from \"../../Config\";\r\nimport DashBoardIconFigma from \"../../assets/icons/dashboard-icon.svg\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport \"./MatSideBar.css\";\r\nconst openedMixin = (theme) => ({\r\n  width: drawerWidth,\r\n\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.enteringScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n});\r\n\r\nconst closedMixin = (theme) => ({\r\n  transition: theme.transitions.create(\"width\", {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  overflowX: \"hidden\",\r\n  width: `calc(${theme.spacing(7)} + 1px)`,\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: `calc(${theme.spacing(8)} + 1px)`,\r\n  },\r\n});\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-end\",\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n}));\r\nconst DrawerFooter = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-end\",\r\n  marginBottom: \"0px\",\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {\r\n\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  width: drawerWidth,\r\n  flexShrink: 0,\r\n  whiteSpace: \"nowrap\",\r\n  boxSizing: \"border-box\",\r\n  ...(open && {\r\n    ...openedMixin(theme),\r\n    \"& .MuiDrawer-paper\": openedMixin(theme),\r\n  }),\r\n  ...(!open && {\r\n    ...closedMixin(theme),\r\n    \"& .MuiDrawer-paper\": closedMixin(theme),\r\n  }),\r\n}));\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    \r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: \"theme.palette.background.paper\",\r\n  },\r\n  nested: {\r\n    paddingLeft: \" theme.spacing(4)\",\r\n  },\r\n\r\n}));\r\nexport default function MatSideBar(props) {\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const open = useSelector((state) => state.drawer.open);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  const [opening, setOpen] = useState(true);\r\n  const[opening2,setOpen2]=useState(true);\r\n  const handleClickProjects = () => {\r\n    setOpen(!opening);\r\n  };\r\n  const handleClickWBS=()=>{\r\n    setOpen2(!opening2);\r\n  }\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    dispatch(changeState(open ? false : true));\r\n  };\r\n  React.useEffect(() => {\r\n    console.log(location.pathname);\r\n  }, [location]);\r\n  return (\r\n   <>\r\n   {/**Desktop menu */}\r\n    <Drawer variant=\"permanent\" open={open} \r\n     className=\"custom-drawer\">\r\n      <DrawerHeader>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          {/* Logo */}\r\n          {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </DrawerHeader>\r\n\r\n      <List>\r\n        <ListItem\r\n          className=\"custom-list-item\"\r\n          button\r\n          onClick={() => {\r\n            history.push(\"/dashboard\");\r\n          }}\r\n          selected={location.pathName == \"/dashboard\" ? true : false}\r\n        >\r\n          <ListItemIcon>\r\n            {/* <DashboardRoundedIcon/> */}\r\n            {/* <Icon><img src={DashBoardIconFigma}/></Icon> */}\r\n            <img src={DashBoardIconFigma} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Dashboard\"} />\r\n        </ListItem>\r\n        {/**Projects */}\r\n        <ListItem button onClick={handleClickProjects}>\r\n          {/* <ListItem button onClick={()=>{history.push('/dashboard/ongoing-project-details-view')}} selected={location.pathName == \"/dashboard/ongoing-project-details-view\"?true:false}> */}\r\n\r\n          <ListItemIcon>\r\n            {/* <DashboardRoundedIcon/> */}\r\n            {/* <Icon><img src={DashBoardIconFigma}/></Icon> */}\r\n            <img src={DashBoardIconFigma} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Projects\" />\r\n          {opening ? <ExpandMore /> : <ExpandLess />}\r\n        </ListItem>\r\n        {/*Projects sub routes*/}\r\n        <Collapse in={!opening} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {/**Ongoing project */}\r\n            <ListItem\r\n              button\r\n              className={classes.nested}\r\n              onClick={() => {\r\n                history.push(\r\n                  \"/dashboard/Projects/ongoing-project-details-view\"\r\n                );\r\n              }}\r\n              selected={\r\n                location.pathName ==\r\n                \"/dashboard/Projects/ongoing-project-details-view\"\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <RadioButtonCheckedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Ongoing\" />\r\n            </ListItem>\r\n            {/**Completed Project */}\r\n            <ListItem\r\n              button\r\n              className={classes.nested}\r\n              onClick={() => {\r\n                history.push(\"/dashboard/Projects/completed-projects\");\r\n              }}\r\n              selected={\r\n                location.pathName == \"/dashboard/Projects/completed-projects\"\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <RadioButtonCheckedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Completed\" />\r\n            </ListItem>\r\n            {/**Create a new project */}\r\n            <ListItem\r\n              button\r\n              className={classes.nested}\r\n              onClick={() => {\r\n                history.push(\"/dashboard/Projects/create-new-project\");\r\n              }}\r\n              selected={\r\n                location.pathName == \"/dashboard/Projects/create-new-project\"\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <RadioButtonCheckedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Create Project\" />\r\n            </ListItem>\r\n          </List>\r\n        </Collapse>\r\n        {/**Meetings */}\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            history.push(\"/dashboard/meetings\");\r\n          }}\r\n          selected={location.pathName == \"/dashboard/meetings\" ? true : false}\r\n        >\r\n          <ListItemIcon>\r\n            <img src={DashBoardIconFigma} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Meetings\"} />\r\n        </ListItem>\r\n        {/*WBS*/}\r\n        <ListItem\r\n          button\r\n         onClick={handleClickWBS}\r\n        >\r\n          <ListItemIcon>\r\n            <img src={DashBoardIconFigma} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"WBS\"} />\r\n          {opening2 ? <ExpandMore /> : <ExpandLess />}\r\n        </ListItem>\r\n        {/**WBS Subroutes */}\r\n        <Collapse in={!opening2} timeout=\"auto\" unmountOnExit>\r\n          <List component=\"div\" disablePadding>\r\n            {/**Create WBS */}\r\n            <ListItem\r\n              button\r\n              className={classes.nested}\r\n              onClick={() => {\r\n                history.push(\r\n                  \"/dashboard/WBS/create-wbs\"\r\n                );\r\n              }}\r\n              selected={\r\n                location.pathName ==\r\n                \"/dashboard/WBS/create-wbs\"\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <RadioButtonCheckedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Create WBS\" />\r\n            </ListItem>\r\n            {/**BOARD */}\r\n            <ListItem\r\n              button\r\n              className={classes.nested}\r\n              onClick={() => {\r\n                history.push(\"/dashboard/WBS/board\");\r\n              }}\r\n              selected={\r\n                location.pathName == \"/dashboard/WBS/board\"\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <RadioButtonCheckedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Board\" />\r\n            </ListItem>\r\n          \r\n          </List>\r\n        </Collapse>\r\n        {/**EVMS */}\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            history.push(\"/dashboard/EVMS\");\r\n          }}\r\n          selected={location.pathName == \"/dashboard/EVMS\" ? true : false}\r\n        >\r\n          <ListItemIcon>\r\n            <img src={DashBoardIconFigma} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"EVMS\"} />\r\n        </ListItem>\r\n        {/**Profile */}\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            history.push(\"/dashboard/profile\");\r\n          }}\r\n          selected={location.pathName == \"/dashboard/profile\" ? true : false}\r\n        >\r\n          <ListItemIcon>\r\n            <img src={DashBoardIconFigma} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Profile\"} />\r\n        </ListItem>\r\n        {/**Time card */}\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            history.push(\"/dashboard/timecards\");\r\n          }}\r\n          selected={location.pathName == \"/dashboard/timecards\" ? true : false}\r\n        >\r\n          <ListItemIcon>\r\n            <img src={DashBoardIconFigma} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Timecards\"} />\r\n        </ListItem>\r\n        {/**Shared Docs */}\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            history.push(\"/dashboard/shared-documents\");\r\n          }}\r\n          selected={\r\n            location.pathName == \"/dashboard/shared-documents\" ? true : false\r\n          }\r\n        >\r\n          <ListItemIcon>\r\n            <img src={DashBoardIconFigma} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Shared Docs\"} />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n\r\n    {/**mobile drawer */}\r\n   \r\n\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/dashboard-icon.2ae835ab.svg\";","import React from 'react'\r\nimport { CButton, CCard, CCardBody,CAlert } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchMeetingList } from \"../../store/slices/MeetingSlice\";\r\nimport { USER_ID } from \"../../Config\";\r\n\r\nconst ScheduleMeetings = () => {\r\n    const dispatch = useDispatch()\r\n    const meeting = useSelector(state => state.meeting.data);\r\n    React.useEffect(() => {\r\n        dispatch(fetchMeetingList(localStorage.getItem(USER_ID)))\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    Scheduled Meetings\r\n                </h3>\r\n\r\n                <div className=\"card-holder1 \">\r\n                    {meeting!=undefined && meeting.slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card1\">\r\n                            <CCardBody>\r\n                                <h6 className=\"id-no1\">meeting id: #{item.room_id}</h6>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Project Name:</span> {item.project.task_delivery_order}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Date and Time :</span> {item.start_time}</h5>\r\n                            </CCardBody>\r\n\r\n                        </CCard>\r\n                    ))}\r\n                           { /**If no meetings */}\r\n {meeting==undefined || meeting=='' ? (\r\n                        \r\n                       \r\n                             \r\n                        <CAlert className=\"no-value-show-alert\"  color=\"primary\">Currently there are no upcoming meetings</CAlert>     \r\n                      \r\n                \r\n              ):null\r\n              \r\n              \r\n              }\r\n                </div>\r\n                {meeting!=undefined && meeting.length>3 && <div className=\"button-holder3\"><CButton className=\"tiny-buttons1\">View all</CButton></div>}\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default ScheduleMeetings\r\n","import React from 'react';\r\nimport './evmsTable.css';\r\nimport {CButton, CCard, CCardBody} from '@coreui/react';\r\n\r\nconst evmsView =()=>{\r\nreturn(\r\n    <>\r\n    <div className=\"main-holder-projects\">\r\n    <h3 className=\"projectsHeader\">\r\n   EVMS Summary\r\n</h3> \r\n<div className=\"card-holder1\">\r\n<CCard className=\"project-card1\">\r\n        <CCardBody>\r\n            <h6 className=\"id-no1\">Virtual Office</h6>\r\n            <h5 className=\"card-details2\"><span className=\"p-header-4\">CPI:</span> <span className=\"evmsval\">1.5</span> (CPI{'>'}1,within budget.CPI {'<'}1,over budget)</h5>\r\n            <h5 className=\"card-details2\"><span className=\"p-header-4\">SPI :</span><span className=\"evmsval\">1</span>(SPI {'>'}1,within schedule,SPI {'<'}1,behind schedule)</h5>\r\n        </CCardBody>\r\n    \r\n    </CCard>\r\n    <CCard className=\"project-card1\">\r\n        <CCardBody>\r\n            <h6 className=\"id-no1\">Virtual Office</h6>\r\n            <h5 className=\"card-details2\"><span className=\"p-header-4\">CPI :</span> <span className=\"evmsval\">1.5</span>(CPI{'>'}1,within budget.CPI {'<'}1,over budget)</h5>\r\n            <h5 className=\"card-details2\"><span className=\"p-header-4\">SPI :</span> <span className=\"evmsval\"> 1</span>(SPI {'>'}1,within schedule,SPI {'<'}1,behind schedule)</h5>\r\n        </CCardBody>\r\n    \r\n    </CCard> \r\n</div>\r\n<div className=\"button-holder3\"><CButton className=\"tiny-buttons1\">View all</CButton></div>\r\n   \r\n    </div>  \r\n    \r\n    </>\r\n)\r\n}\r\nexport default evmsView;","import React from 'react';\r\nimport './projectsTable.css';\r\nimport { CButton, CCard, CCardBody,CAlert } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchProjectsThunk } from \"../../store/slices/ProjectsSlice\";\r\nimport { USER_ID } from \"../../Config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst ProjectsTableDashboard = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const projects = useSelector(state => state.projects.data);\r\n    React.useEffect(() => {\r\n        dispatch(fetchProjectsThunk(localStorage.getItem(USER_ID)))\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    Projects\r\n                </h3>\r\n\r\n                <div className=\"card-holder1\">\r\n                    {projects != undefined && Array.from(projects).slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card1\">\r\n                            <CCardBody>\r\n                                <h6 className=\"id-no1\">project id: #{item.work_package_number}</h6>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Project Name (key): </span> {item.task_delivery_order}</h5>\r\n                                {/*<h5 className=\"card-details1\"><span className=\"p-header-3\">Lead Name : </span>Pial Noman</h5>*/}\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    ))}\r\n                      { /**If no projects */}\r\n {projects==''|| projects==undefined? (\r\n                        \r\n                       \r\n                             \r\n                        <CAlert className=\"no-value-show-alert\"  color=\"primary\">Currently there are no ongoing projects</CAlert>     \r\n                      \r\n                \r\n              ):null\r\n              \r\n              \r\n              }\r\n                </div>\r\n                {projects!=undefined && projects.length>3  && <div className=\"button-holder3\"><CButton className=\"tiny-buttons1\" onClick={() => history.push({pathname:'/dashboard/Projects/ongoing-projects'})}>View all</CButton></div>}\r\n             \r\n              \r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ProjectsTableDashboard;\r\n","import React, { useState } from 'react';\r\nimport { CButton, CCard, CCardBody,CAlert } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { fetchUserWiseWbsThunk } from '../../store/slices/WbsSlice';\r\nimport { USER_ID } from \"../../Config\";\r\nconst AssignedProjectsDashboard = () => {\r\n    const dispatch = useDispatch()\r\n    const wbs = useSelector(state => state.wbs.data);\r\n    React.useEffect(() => {\r\n        dispatch(fetchUserWiseWbsThunk(localStorage.getItem(USER_ID)))\r\n    }, [])\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    Assigned to me\r\n                </h3>\r\n\r\n                <div className=\"card-holder1\">\r\n                    {wbs!=undefined && wbs.slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card1\">\r\n                            <CCardBody>\r\n                                <h6 className=\"id-no1\">project id: #{item.project.work_package_number}</h6>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Task Title:</span> {item.project.task_title}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Due Date :</span> {item.project.planned_delivery_date}</h5>\r\n                            </CCardBody>\r\n\r\n                        </CCard>\r\n                    ))}\r\n                              { /**If no wbs */}\r\n {wbs==undefined? (\r\n                        \r\n                       \r\n                             \r\n                        <CAlert className=\"no-value-show-alert\"  color=\"primary\">Currently there are no projects assigned to you</CAlert>     \r\n                      \r\n                \r\n              ):null\r\n              \r\n              \r\n              }\r\n                </div>\r\n                {wbs!=undefined && wbs.length>3 && <div className=\"button-holder3\"><CButton className=\"tiny-buttons1\">View all</CButton></div>}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default AssignedProjectsDashboard;\r\n","import React, { Suspense } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Header from '../../components/header/Header';\r\nimport MatSideBar from '../../components/sidebar/MatSideBar';\r\nimport { CCol, CContainer, CFade, CRow } from '@coreui/react';\r\nimport innerRoutes from '../../routes/DashboardRoutes'\r\nimport {\r\n    Route,\r\n    Switch,\r\n  } from 'react-router-dom';\r\n  \r\nimport './dashboard.css';\r\nimport ScheduledMeetings from '../../components/scheduledMeetings/scheduledMeets'\r\nimport EvmsShow  from '../../components/evms/evmsTable'\r\nimport ProjectTables from '../../components/projects-table/projectsTable'\r\nimport AssignedToMe from '../../components/assignedProjects/assignedProjects';\r\nimport { useLocation } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useDispatch } from 'react-redux';\r\nconst loading = (\r\n    <div className=\"pt-3 text-center\">\r\n      <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n    </div>\r\n)\r\n\r\nconst Dashboard=()=> {\r\n    let location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    React.useEffect(()=>{\r\n        console.log('dashboard mounted')\r\n        if(location.state?.from == 'login'){\r\n            enqueueSnackbar('Welcome ',{variant:'success'})\r\n        }\r\n        //console.log(new Date(JSON.parse(localStorage.getItem('TOKEN')).time).toISOString())\r\n    },[])\r\n    return (\r\n        <>\r\n        <CContainer>\r\n            {/**Row for showing da tables */}\r\n            <CRow>\r\n                <div className=\"col-lg-5 offset-lg-1\"><ProjectTables/></div>\r\n\r\n                <div className=\"col-lg-5\"><AssignedToMe/></div> \r\n                \r\n                <div className=\"col-lg-5 offset-lg-1\"><EvmsShow/></div>\r\n                \r\n                <div className=\"col-lg-5\"><ScheduledMeetings/></div>\r\n            \r\n\r\n            </CRow>\r\n        </CContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Dashboard)\r\n"],"sourceRoot":""}