{"version":3,"sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/react-select/dist/react-select.esm.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","pages/create-evms/createEVMS.js"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","index","Component","manageState","Select","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayLikeToArray","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","ProjectEVMS","colourStyles","option","provided","state","fontSize","projects","useSelector","e","pm_projects","forEach","item","idx","push","value","id","label","task_delivery_order","title","sub_task","data","console","log","dispatch","useDispatch","React","useEffect","fetchProjectsThunk","project","useState","projectValue","setProjectValue","create_evms","a","JSON","stringify","formCreateEVMS","values","API","post","then","res","status","success","reset_form","swal","resetForm","useFormik","initialValues","work_package_number","earned_value","actual_cost","estimate_at_completion","estimate_to_completion","planned_value","planned_hours","variance_at_completion","budget_at_completion","validate","validateOnChange","validateOnBlur","errors","className","htmlFor","closeMenuOnSelect","placeholder","isClearable","isMulti","onChange","fetchProjectsAssigneeThunk","setFieldValue","classNamePrefix","required","options","styles","undefined","color","estimated_person","planned_delivery_date","type","min","step","handleChange","onClick","handleSubmit"],"mappings":"4GAUAA,EAAOC,QAVP,SAA2BC,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,GAITN,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQO,YAAa,G,iCCXxE,oGAyDIC,GAzDJ,uDAuDEC,YAEUC,YAAYC,MAETH,O,oBC3Df,IAAII,EAAoB,EAAQ,KAE5BC,EAAkB,EAAQ,KAE1BC,EAA6B,EAAQ,KAErCC,EAAoB,EAAQ,KAMhChB,EAAOC,QAJP,SAA4BC,GAC1B,OAAOW,EAAkBX,IAAQY,EAAgBZ,IAAQa,EAA2Bb,IAAQc,KAI9FhB,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQO,YAAa,G,oBCbxE,IAAIS,EAAmB,EAAQ,KAM/BjB,EAAOC,QAJP,SAA4BC,GAC1B,GAAIK,MAAMW,QAAQhB,GAAM,OAAOe,EAAiBf,IAIlDF,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQO,YAAa,G,kBCHxER,EAAOC,QAJP,SAA0BkB,GACxB,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOZ,MAAMe,KAAKH,IAItHnB,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQO,YAAa,G,oBCLxE,IAAIS,EAAmB,EAAQ,KAW/BjB,EAAOC,QATP,SAAqCsB,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAON,EAAiBM,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBlB,MAAMe,KAAKC,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAWR,EAAiBM,EAAGC,QAAxG,IAIFxB,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQO,YAAa,G,kBCRxER,EAAOC,QAJP,WACE,MAAM,IAAIiC,UAAU,yIAItBlC,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQO,YAAa,G,qNCoRzD2B,UArQK,WAAO,IAAD,EAElBC,EAAe,CAEnBC,OAAQ,SAACC,EAAUC,GAAX,mBAAC,eAA0BD,GAA3B,IAAqCE,SAAU,sBAEnDC,EAAWC,aAAY,SAAAH,GAC3B,IAAII,EAAE,GAIN,OAHApC,MAAMe,KAAMiB,EAAME,SAASG,aAAaC,SAAQ,SAACC,EAAKC,GACpDJ,EAAEK,KAAK,CAACC,MAAMH,EAAKI,GAAGC,MAAML,EAAKM,oBAAoBC,MAAM,IAAIP,EAAKQ,SAASC,KAAKT,OAE7EH,KAETa,QAAQC,IAAI,cAAehB,GAC3B,IAAMiB,EAAWC,cACjBC,IAAMC,WAAU,WACdH,EAASI,YAAmB,MAC3B,IAGkBpB,aAAY,SAAAH,GAAK,OAAIA,EAAME,SAASsB,WAAzD,IAiBA,EAAwCC,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KAeMC,EAAW,uCAAG,sBAAAC,EAAA,sDAClBZ,QAAQC,IAAI,SAAUY,KAAKC,UAAUC,EAAeC,SACpDC,IAAIC,KAAK,eAAgBH,EAAeC,QAAQG,MAAK,SAACC,GACpDpB,QAAQC,IAAImB,GACM,KAAdA,EAAIC,QAAqC,QAApBD,EAAIrB,KAAKuB,UAChCC,IACAC,IAAK,WAAY,sBAAuB,eAN1B,2CAAH,qDAUXD,EAAa,WACjBR,EAAeU,YACff,EAAgB,OAiBZK,EAAiBW,aAAS,GAC9BC,cAAe,CACbpB,QAAS,GACVqB,oBAAoB,GACnBC,aAAc,GACdC,YAAa,GACbC,uBAAwB,GACxBC,uBAAwB,GACxBC,cAAe,GACfC,cAAc,GACdC,uBAAwB,GACxBC,qBAAsB,IAG5BC,UAAS,EACLC,kBAAkB,EAClBC,gBAAgB,GAhBc,0BAbP,SAACvB,GACxB,IAAMwB,EAAQ,GAUd,OARIxB,EAAOa,eAAaW,EAAOX,aAAa,4BACxCb,EAAOc,cAAYU,EAAOV,YAAY,2BACtCd,EAAOe,yBAAuBS,EAAOT,uBAAuB,sCAC5Df,EAAOgB,yBAAuBQ,EAAOR,uBAAuB,sCAC5DhB,EAAOmB,yBAAwBK,EAAOL,uBAAuB,sCAC7DnB,EAAOoB,uBAAqBI,EAAOJ,qBAAqB,oCAGrDI,KAEuB,yBAkBpB7B,GAlBoB,IAqBhC,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,qBAAK8B,UAAU,kCAAf,SACE,eAAC,IAAD,CAAOA,UAAU,wBAAjB,UACE,eAAC,IAAD,CAAaA,UAAU,mBAAvB,UACG,IACD,oBAAIA,UAAU,6BAAd,4BAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAOA,UAAU,OAAjB,SACE,eAAC,IAAD,WAEE,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAiBC,QAAQ,UAA3C,uBAGA,cAAC,IAAD,CACEC,mBAAmB,EACnB,kBAAgB,UAChBjD,GAAG,UAGHkD,YAAY,mBACZC,aAAa,EACbC,SAAS,EAGTC,SA3FE,SAAClE,GACvBqB,EAAS8C,YAA2BnE,EAAO+C,sBAC3ClB,EAAgB7B,GAChBmB,QAAQC,IAAI,eAAepB,GAE3BkC,EAAekC,cAAc,UAAUpE,EAAOY,OAE9CsB,EAAekC,cAAc,gBAAgBpE,EAAOkB,KAAKmC,eAC7DnB,EAAekC,cAAc,gBAAgBpE,EAAOkB,KAAKkC,eACzDlB,EAAekC,cAAc,sBAAsBpE,EAAOkB,KAAK6B,sBAmFvCsB,gBAAgB,qBAChBC,UAAQ,EACRC,QAASnE,EACToE,OAAQzE,SAGO0E,GAAhB7C,EACE,qBAAKgC,UAAU,OAAf,SACC,cAAC,IAAD,CAAQc,MAAM,UAAd,SACE,kCACE,qDADF,IAC+B9C,EAAaV,KAAK6B,oBAC/C,uBACA,oDAHF,IAG8BnB,EAAaV,KAAKyD,iBAC9C,uBACA,wDALF,IAKkC/C,EAAaV,KAAK0D,sBAClD,uBACA,6CAAmB,4CAOzB,KAEC1C,EAAeyB,OAAOjC,SAAW,mBAAGkC,UAAU,QAAb,SAAsB1B,EAAeyB,OAAOjC,aAUlF,sBAAKkC,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAiBC,QAAQ,eAA3C,4BAGA,cAAC,IAAD,CAAQD,UAAU,qBAAqBjE,KAAK,eAAekB,GAAG,eAAegE,KAAK,SAASC,IAAI,OAAOC,KAAK,OAAOnE,MAAOsB,EAAeC,OAAOa,aAAckB,SAAUhC,EAAe8C,aAAcV,UAAQ,IAI3MpC,EAAeyB,OAAOX,cAAgB,mBAAGY,UAAU,QAAb,SAAsB1B,EAAeyB,OAAOX,kBAGrF,sBAAKY,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAiBC,QAAQ,cAA3C,4BAGA,cAAC,IAAD,CAAQD,UAAU,qBAAqBjE,KAAK,cAAckB,GAAG,cAAcgE,KAAK,SAASC,IAAI,IAAIC,KAAK,MAAMnE,MAAOsB,EAAeC,OAAOc,YAAaiB,SAAUhC,EAAe8C,aAAcV,UAAQ,IAEpMpC,EAAeyB,OAAOV,aAAe,mBAAGW,UAAU,QAAb,SAAsB1B,EAAeyB,OAAOV,iBAGpF,sBAAKW,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAiBC,QAAQ,yBAA3C,sCAGA,cAAC,IAAD,CAAQD,UAAU,qBAAqBjE,KAAK,yBAAyBkB,GAAG,yBAAyBgE,KAAK,SAASC,IAAI,IAAIC,KAAK,MAAMnE,MAAOsB,EAAeC,OAAOe,uBAAwBgB,SACnLhC,EAAe8C,aAAcV,UAAQ,IAEnCpC,EAAeyB,OAAOT,wBAA0B,mBAAGU,UAAU,QAAb,SAAsB1B,EAAeyB,OAAOT,4BAGpG,sBAAKU,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAiBC,QAAQ,yBAA3C,sCAGA,cAAC,IAAD,CAAQD,UAAU,qBAAqBjE,KAAK,yBAAyBkB,GAAG,yBAAyBgE,KAAK,SAASC,IAAI,IAAIC,KAAK,MAAMnE,MAAOsB,EAAeC,OAAOgB,uBAAwBe,SAAUhC,EAAe8C,aAAcV,UAAQ,IAErOpC,EAAeyB,OAAOR,wBAA0B,mBAAGS,UAAU,QAAb,SAAsB1B,EAAeyB,OAAOR,4BAI/F,sBAAKS,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAiBC,QAAQ,gBAA3C,2BAGA,cAAC,IAAD,CAAQD,UAAU,qBAAqBjE,KAAK,gBAAgBkB,GAAG,gBAAgBgE,KAAK,SAASC,IAAI,IAAIlE,MAAOsB,EAAeC,OAAOiB,cAAec,SAAUhC,EAAe8C,eAEzK9C,EAAeyB,OAAOP,eAAiB,mBAAGQ,UAAU,QAAb,SAAsB1B,EAAeyB,OAAOP,mBAGtF,sBAAKQ,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAiBC,QAAQ,gBAA3C,2BAGA,cAAC,IAAD,CAAQD,UAAU,qBAAqBjE,KAAK,gBAAgBkB,GAAG,gBAAgBgE,KAAK,SAASjE,MAAOsB,EAAeC,OAAOkB,cAAea,SAAUhC,EAAe8C,eAEjK9C,EAAeyB,OAAON,eAAiB,mBAAGO,UAAU,QAAb,SAAsB1B,EAAeyB,OAAON,mBAGtF,sBAAKO,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAiBC,QAAQ,yBAA3C,sCAGA,cAAC,IAAD,CAAQD,UAAU,qBAAqBjE,KAAK,yBAAyBkB,GAAG,yBAAyBgE,KAAK,SAASC,IAAI,IAAIC,KAAK,MAAMnE,MAAOsB,EAAeC,OAAOmB,uBAAwBY,SAAUhC,EAAe8C,aAAcV,UAAQ,IAE3PpC,EAAeyB,OAAOL,wBAA0B,mBAAGM,UAAU,QAAb,SAAsB1B,EAAeyB,OAAOL,4BAGzE,sBAAKM,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAiBC,QAAQ,uBAA3C,oCAGA,cAAC,IAAD,CAAQD,UAAU,qBAAqBjE,KAAK,uBAAuBkB,GAAG,uBAAuBgE,KAAK,SAASC,IAAI,IAAIC,KAAK,MAAMnE,MAAOsB,EAAeC,OAAOoB,qBAAsBW,SAAUhC,EAAe8C,aAAcV,UAAQ,IAGjOpC,EAAeyB,OAAOJ,sBAAwB,mBAAGK,UAAU,QAAb,SAAsB1B,EAAeyB,OAAOJ,0BAG3F,qBAAKK,UAAU,YAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAASA,UAAU,gCAAgCqB,QAAS/C,EAAegD,aAA3E,yBACA,cAAC,IAAD,CAAStB,UAAU,gCAAgCqB,QAASvC,EAA5D","file":"static/js/17.64b7a345.chunk.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import { S as Select } from './Select-dbb12e54.esm.js';\nexport { c as createFilter, d as defaultTheme, m as mergeStyles } from './Select-dbb12e54.esm.js';\nimport { m as manageState } from './stateManager-845a3300.esm.js';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport { _ as _createSuper } from './index-4bd03571.esm.js';\nexport { c as components } from './index-4bd03571.esm.js';\nimport React, { Component } from 'react';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport memoizeOne from 'memoize-one';\nimport '@babel/runtime/helpers/extends';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/typeof';\nimport 'react-input-autosize';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\n\nvar NonceProvider = /*#__PURE__*/function (_Component) {\n  _inherits(NonceProvider, _Component);\n\n  var _super = _createSuper(NonceProvider);\n\n  function NonceProvider(props) {\n    var _this;\n\n    _classCallCheck(this, NonceProvider);\n\n    _this = _super.call(this, props);\n\n    _this.createEmotionCache = function (nonce, key) {\n      return createCache({\n        nonce: nonce,\n        key: key\n      });\n    };\n\n    _this.createEmotionCache = memoizeOne(_this.createEmotionCache);\n    return _this;\n  }\n\n  _createClass(NonceProvider, [{\n    key: \"render\",\n    value: function render() {\n      var emotionCache = this.createEmotionCache(this.props.nonce, this.props.cacheKey);\n      return /*#__PURE__*/React.createElement(CacheProvider, {\n        value: emotionCache\n      }, this.props.children);\n    }\n  }]);\n\n  return NonceProvider;\n}(Component);\n\nvar index = manageState(Select);\n\nexport default index;\nexport { NonceProvider };\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import {\r\n  CCard,\r\n  CContainer,\r\n  CRow,\r\n  CCardHeader,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CAlert\r\n} from \"@coreui/react\";\r\nimport { BASE_URL } from '../../Config';\r\nimport React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"../createProject/createProject.css\";\r\nimport { fetchProjectsThunk, fetchProjectsAssigneeThunk, fetchWbsThunk } from '../../store/slices/ProjectsSlice';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useFormik } from 'formik';\r\nimport { API, USER_ID } from '../../Config';\r\nimport swal from 'sweetalert'\r\nconst ProjectEVMS = () => {\r\n\r\n  const colourStyles = {\r\n    // control: (styles, state) => ({ ...styles,height:\"35px\", fontSize: '14px !important', lineHeight: '1.42857', borderRadius: \"8px\",borderRadius:\".25rem\",color:\"rgb(133,133,133)\",border:state.isFocused ? '2px solid #0065ff' :'inherit'}),\r\n    option: (provided, state) => ({ ...provided, fontSize: \"14px !important\" }),\r\n  };\r\n  const projects = useSelector(state =>{\r\n    let e=[]\r\n    Array.from( state.projects.pm_projects).forEach((item,idx)=>{\r\n      e.push({value:item.id,label:item.task_delivery_order.title+'/'+item.sub_task,data:item})\r\n    })\r\n    return e\r\n  })\r\n  console.log(\"pM projects\", projects);\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(fetchProjectsThunk(5))\r\n  }, [])\r\n\r\n\r\n  const assigneeList = useSelector(state => state.projects.project)\r\n\r\n  const handleChange = (field, value) => {\r\n    switch (field) {\r\n      case \"projects\":\r\n\r\n        setProjectValue(value);\r\n\r\n       \r\n        break;\r\n      // case \"workPackage\":\r\n      //   setPackageValue(value);\r\n      //   break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const [projectValue, setProjectValue] = useState();\r\n\r\n  \r\n  const getAssigneeList = (option) => {\r\n    dispatch(fetchProjectsAssigneeThunk(option.work_package_number))\r\n    setProjectValue(option)\r\n    console.log('projectValue',option)\r\n    \r\n    formCreateEVMS.setFieldValue('project',option.value)\r\n  \r\n    formCreateEVMS.setFieldValue('planned_hours',option.data.planned_hours)\r\nformCreateEVMS.setFieldValue('planned_value',option.data.planned_value)\r\nformCreateEVMS.setFieldValue('work_package_number',option.data.work_package_number)\r\n    // setSelectedProjectEndDate(option.planned_delivery_date)\r\n  }\r\n  const create_evms = async () => {\r\n    console.log('values', JSON.stringify(formCreateEVMS.values))\r\n    API.post('evms/create/', formCreateEVMS.values).then((res) => {\r\n      console.log(res)\r\n      if (res.status == 200 && res.data.success == 'True') {\r\n        reset_form()\r\n        swal('Created!', 'Successfuly Created', 'success')\r\n      }\r\n    })\r\n  }\r\n  const reset_form = () => {\r\n    formCreateEVMS.resetForm()\r\n    setProjectValue(null);\r\n\r\n\r\n  }\r\n  const validate_evms_form=(values) =>{\r\n    const errors ={}\r\n    // if(!values.project)errors.project=\"Project Selection is required\"\r\n    if(!values.earned_value)errors.earned_value=\"Earned value is required\"\r\n    if(!values.actual_cost)errors.actual_cost=\"Actual Cost is required\"\r\n    if(!values.estimate_at_completion)errors.estimate_at_completion=\"Estimate at completion is required\"\r\n    if(!values.estimate_to_completion)errors.estimate_to_completion=\"Estimate to completion is required\"\r\n    if(!values.variance_at_completion) errors.variance_at_completion=\"Variance at completion is required\"\r\n    if(!values.budget_at_completion)errors.budget_at_completion=\"Budget at completion is required\"\r\n    // if(!values.planned_value)errors.planned_value=\"Planned value is required\"\r\n    // if(!values.planned_hours)errors.planned_hours=\"Planned hours is required\"\r\n    return errors\r\n  }\r\n  const formCreateEVMS = useFormik({\r\n    initialValues: {\r\n      project: \"\",\r\n     work_package_number:\"\",\r\n      earned_value: \"\",\r\n      actual_cost: \"\",\r\n      estimate_at_completion: \"\",\r\n      estimate_to_completion: \"\",\r\n      planned_value: \"\",\r\n      planned_hours:\"\",\r\n      variance_at_completion: \"\",\r\n      budget_at_completion: \"\"\r\n\r\n    },\r\nvalidate:true,\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate:validate_evms_form,\r\n    onSubmit: create_evms\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow>\r\n          <div className=\"col-lg-10 offset-lg-1 col-md-12\">\r\n            <CCard className=\"custom-project-card-1\">\r\n              <CCardHeader className=\"project-header-3\">\r\n                {\" \"}\r\n                <h4 className=\"section-name-projectcreate\">Create EVMS</h4>\r\n              </CCardHeader>\r\n              <CContainer>\r\n                <CForm className=\"mt-3\">\r\n                  <CRow>\r\n                    {/**Project Name */}\r\n                    <div className=\"col-lg-12 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"project\">\r\n                        Project *\r\n                      </CLabel>\r\n                      <Select\r\n                        closeMenuOnSelect={true}\r\n                        aria-labelledby=\"project\"\r\n                        id=\"project\"\r\n                        // getOptionLabel={option => option.task_delivery_order.title + \" / \" + option.sub_task}\r\n                        // getOptionValue={option => option.id}\r\n                        placeholder=\"Select a project\"\r\n                        isClearable={false}\r\n                        isMulti={false}\r\n                     \r\n                        // onChange={(value) => handleChange(\"projects\", value)}\r\n                        onChange={getAssigneeList}\r\n                        classNamePrefix=\"custom-forminput-6\"\r\n                        required\r\n                        options={projects}\r\n                        styles={colourStyles}\r\n                      />\r\n                      {/**View related TDO details */}\r\n                      {projectValue != undefined ?\r\n                        (<div className=\"mt-1\">\r\n                          <CAlert color=\"primary\">\r\n                            <small>\r\n                              <b>Work Package Number:</b> {projectValue.data.work_package_number}\r\n                              <br />\r\n                              <b>Estimated Persons: </b> {projectValue.data.estimated_person}\r\n                              <br />\r\n                              <b>Planned Delivery Date: </b> {projectValue.data.planned_delivery_date}\r\n                              <br />\r\n                              <b>Assignee(s):</b><span> </span>\r\n\r\n\r\n                            </small>\r\n                          </CAlert>\r\n                        </div>\r\n                        ) :\r\n                        null}\r\n                        {/**Error show */}\r\n                        {formCreateEVMS.errors.project && <p className=\"error\">{formCreateEVMS.errors.project}</p>}\r\n                    </div>\r\n                    {/**Work package */}\r\n                    {/* <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"wPackage\">\r\n                        Work Package\r\n                      </CLabel>\r\n                      <CInput name=\"wPackage\" id=\"wPackage\" type=\"number\" readOnly />\r\n                    </div> */}\r\n                    {/**Earned Value */}\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"earned_value\">\r\n                        Earned Value *\r\n                      </CLabel>\r\n                      <CInput className=\"custom-forminput-6\" name=\"earned_value\" id=\"earned_value\" type=\"number\" min=\"0.00\" step=\"0.01\" value={formCreateEVMS.values.earned_value} onChange={formCreateEVMS.handleChange} required>\r\n\r\n                      </CInput>\r\n                      {/**Error show */}\r\n                      {formCreateEVMS.errors.earned_value && <p className=\"error\">{formCreateEVMS.errors.earned_value}</p>}\r\n                    </div>\r\n                    {/**Actual Cost */}\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"actual_cost\">\r\n                        Actual Cost  *\r\n                      </CLabel>\r\n                      <CInput className=\"custom-forminput-6\" name=\"actual_cost\" id=\"actual_cost\" type=\"number\" min=\"0\" step=\"0.1\" value={formCreateEVMS.values.actual_cost} onChange={formCreateEVMS.handleChange} required />\r\n                      {/**Error show */}\r\n                      {formCreateEVMS.errors.actual_cost && <p className=\"error\">{formCreateEVMS.errors.actual_cost}</p>}\r\n                    </div>\r\n                    {/**estimate at completion */}\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"estimate_at_completion\">\r\n                        Estimate at completion *\r\n                      </CLabel>\r\n                      <CInput className=\"custom-forminput-6\" name=\"estimate_at_completion\" id=\"estimate_at_completion\" type=\"number\" min=\"0\" step=\"0.1\" value={formCreateEVMS.values.estimate_at_completion} onChange\r\n                        ={formCreateEVMS.handleChange} required />\r\n                        {/**error show */}\r\n                           {formCreateEVMS.errors.estimate_at_completion && <p className=\"error\">{formCreateEVMS.errors.estimate_at_completion}</p>}\r\n                    </div>\r\n                    {/**estimate to completion */}\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"estimate_to_completion\">\r\n                        Estimate to completion *\r\n                      </CLabel>\r\n                      <CInput className=\"custom-forminput-6\" name=\"estimate_to_completion\" id=\"estimate_to_completion\" type=\"number\" min=\"0\" step=\"0.1\" value={formCreateEVMS.values.estimate_to_completion} onChange={formCreateEVMS.handleChange} required />\r\n                      {/**Error show */}\r\n                      {formCreateEVMS.errors.estimate_to_completion && <p className=\"error\">{formCreateEVMS.errors.estimate_to_completion}</p>}\r\n                    </div>\r\n                    {/**Planned Value */}\r\n\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"planned_value\">\r\n                        Planned Value\r\n                      </CLabel>\r\n                      <CInput className=\"custom-forminput-6\" name=\"planned_value\" id=\"planned_value\" type=\"number\" min=\"0\" value={formCreateEVMS.values.planned_value} onChange={formCreateEVMS.handleChange} />\r\n                      {/**Error show */}\r\n                      {formCreateEVMS.errors.planned_value && <p className=\"error\">{formCreateEVMS.errors.planned_value}</p>}\r\n                    </div>\r\n                    {/**Planned hours */}\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"planned_hours\">\r\n                        Planned Hours\r\n                      </CLabel>\r\n                      <CInput className=\"custom-forminput-6\" name=\"planned_hours\" id=\"planned_hours\" type=\"number\" value={formCreateEVMS.values.planned_hours} onChange={formCreateEVMS.handleChange} />\r\n                      {/**Error show */}\r\n                      {formCreateEVMS.errors.planned_hours && <p className=\"error\">{formCreateEVMS.errors.planned_hours}</p>}\r\n                    </div>\r\n                    {/**variance at completion */}\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"variance_at_completion\">\r\n                        Variance at completion *\r\n                      </CLabel>\r\n                      <CInput className=\"custom-forminput-6\" name=\"variance_at_completion\" id=\"variance_at_completion\" type=\"number\" min=\"0\" step=\"0.1\" value={formCreateEVMS.values.variance_at_completion} onChange={formCreateEVMS.handleChange} required />\r\n{/**Error show */}\r\n{formCreateEVMS.errors.variance_at_completion && <p className=\"error\">{formCreateEVMS.errors.variance_at_completion}</p>}\r\n                    </div>\r\n                    {/**budget at completion */}\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-5\" htmlFor=\"budget_at_completion\">\r\n                        Budget at completion *\r\n                      </CLabel>\r\n                      <CInput className=\"custom-forminput-6\" name=\"budget_at_completion\" id=\"budget_at_completion\" type=\"number\" min=\"0\" step=\"0.1\" value={formCreateEVMS.values.budget_at_completion} onChange={formCreateEVMS.handleChange} required />\r\n                    \r\n                    {/**Error show */}\r\n                    {formCreateEVMS.errors.budget_at_completion && <p className=\"error\">{formCreateEVMS.errors.budget_at_completion}</p>}\r\n                    </div>\r\n                    {/**submit buttons */}\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"project-form-button-holders mt-3\">\r\n                        <CButton className=\"create-btn-prjct create-prjct\" onClick={formCreateEVMS.handleSubmit}>Create EVMS</CButton>\r\n                        <CButton className=\"create-btn-prjct cancel-prjct\" onClick={reset_form}>Cancel</CButton>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </CRow>\r\n                </CForm>\r\n              </CContainer>\r\n            </CCard>\r\n          </div>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default ProjectEVMS;\r\n"],"sourceRoot":""}