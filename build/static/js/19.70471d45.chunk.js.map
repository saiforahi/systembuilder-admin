{"version":3,"sources":["pages/processors/Processors.js"],"names":["Processors","dispatch","useDispatch","history","useHistory","processors","useSelector","state","temp","Array","from","data","forEach","element","idx","push","id","name","deleted_at","className","md","to","shape","color","items","fields","key","_style","width","_classes","label","maxWidth","sorter","filter","light","hover","striped","bordered","columnFilter","size","itemsPerPage","pagination","scopedSlots","item","disabled","onClick","processor_id","console","log","swal","title","text","icon","buttons","dangerMode","then","willDelete","API","delete","response","success","fetchProcessorsList","message","catch","error","type","pathname","brand"],"mappings":"mIAAA,yFAkHeA,UA3GI,WACf,IAAMC,EAAWC,cACbC,EAAUC,cACRC,EAAaC,aAAY,SAAAC,GAC3B,IAAIC,EAAK,GAIT,OAHAC,MAAMC,KAAKH,EAAMF,WAAWM,MAAMC,SAAQ,SAACC,EAAQC,GAC/CN,EAAKO,KAAK,CAAC,IAAID,EAAI,EAAEE,GAAGH,EAAQG,GAAG,KAAOH,EAAQI,KAAKC,WAAWL,EAAQK,gBAEvEV,KAqCX,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMW,UAAU,qBAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,qCAAvB,SACI,cAAC,IAAD,CAAME,GAAG,+BAAT,SAAwC,cAAC,IAAD,CAASC,MAAM,QAAQC,MAAM,UAA7B,uBAGhD,uBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAMH,GAAG,IAAID,UAAU,cAAvB,SACI,eAAC,IAAD,CAAOA,UAAU,oBAAjB,UACI,cAAC,IAAD,UACI,8CAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CACIK,MAAOnB,EACPoB,OAAQ,CACJ,CACIC,IAAK,IACLC,OAAQ,CAAEC,MAAO,MACjBC,SAAU,oBAEd,OACA,CACIH,IAAK,SACLI,MAAO,UACPH,OAAQ,CAAEI,SAAU,MACpBC,QAAQ,EACRC,QAAQ,IAGhBC,OAAK,EACLC,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRL,QAAM,EACNM,cAAY,EACZC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAa,CACT,OACI,SAACC,GAAD,OACI,6BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAASC,UAlD3C1B,EAkDgEyB,EAAKzB,WAjDhE,MAAZA,GAiDyF2B,QAAS,kBAlFxFC,EAkF4GH,EAAK3B,GAjFlI+B,QAAQC,IAAI,KAAKF,QACjBG,IAAK,CACDC,MAAO,gBACPC,KAAM,uEACNC,KAAM,UACNC,SAAS,EACTC,YAAY,IAEbC,MAAK,SAACC,GACDA,GACFC,IAAIC,OAAO,qBAAqBZ,GAAcS,MAAK,SAAAI,GACvB,GAAvBA,EAAShD,KAAKiD,SACf3D,EAAS4D,eACTZ,IAAK,mDAAoD,CACvDG,KAAM,aAIqB,GAAvBO,EAAShD,KAAKiD,SACpBX,IAAK,QAAQU,EAAShD,KAAKmD,QAAS,CAClCV,KAAM,aAITW,OAAM,SAAAC,UAzBC,IAAClB,GAkFsHmB,KAAK,SAAS1B,KAAK,KAAKhB,MAAM,SAArH,oBADJ,IACmJ,cAAC,IAAD,CAASsB,QAAS,WAAQ1C,EAAQY,KAAK,CAAEmD,SAAU,6BAA8B3D,MAAO,CAAE4D,MAAOxB,MAAaJ,KAAK,KAAK0B,KAAK,SAAS1C,MAAM,UAA5I,uBAlDlL,IAACL","file":"static/js/19.70471d45.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CCard, CCardBody, CCol, CContainer, CDataTable, CRow, CButton, CBadge, CCardHeader } from '@coreui/react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport swal from 'sweetalert'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {API} from '../../Config'\r\nimport { fetchProcessorsList } from '../../store/slices/processorsSlice'\r\nconst Processors = () => {\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n    const processors = useSelector(state =>{\r\n        let temp=[]\r\n        Array.from(state.processors.data).forEach((element,idx) => {\r\n            temp.push({'#':idx+1,id:element.id,'Name':element.name,deleted_at:element.deleted_at})\r\n        });\r\n        return temp\r\n    })\r\n    const delete_laptop=(processor_id)=>{\r\n        console.log('id',processor_id)\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will be able to recover this record from Archieve!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          })\r\n          .then((willDelete) => {\r\n            if (willDelete) {\r\n              API.delete('processors/delete/'+processor_id).then(response=>{\r\n                if(response.data.success==true){\r\n                  dispatch(fetchProcessorsList())\r\n                  swal(\"Poof! Your selected Car record has been deleted!\", {\r\n                    icon: \"success\",\r\n                  });\r\n                  \r\n                }\r\n                else if(response.data.success==false){\r\n                  swal(\"Poof!\"+response.data.message, {\r\n                    icon: \"error\",\r\n                  });\r\n                }\r\n                \r\n              }).catch(error=>{\r\n                //swal(\"Failed!\",error,\"error\");\r\n              })\r\n              \r\n            }\r\n          });\r\n    }\r\n    const is_trashed=(deleted_at)=>{\r\n        return deleted_at==null?false:true\r\n    }\r\n    return (\r\n        <>\r\n            <CContainer>\r\n                <CRow className=\"align-items-center\">\r\n                    <CCol md=\"8\" className=\"mb-3 mb-xl-0 text-left offset-md-2\">\r\n                        <Link to=\"/dashboard/processors/create\"><CButton shape=\"round\" color=\"primary\">Add</CButton></Link>\r\n                    </CCol>\r\n                </CRow>\r\n                <hr></hr>\r\n                <CRow>\r\n                    <CCol md=\"8\" className=\"offset-md-2\">\r\n                        <CCard className=\"custom-wbs-card-1\">\r\n                            <CCardHeader>\r\n                                <h3>Processors</h3>\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CDataTable\r\n                                    items={processors}\r\n                                    fields={[\r\n                                        {\r\n                                            key: \"#\",\r\n                                            _style: { width: \"5%\" },\r\n                                            _classes: \"font-weight-bold\",\r\n                                        },\r\n                                        \"Name\",\r\n                                        {\r\n                                            key: \"Action\",\r\n                                            label: \"Actions\",\r\n                                            _style: { maxWidth: \"5%\" },\r\n                                            sorter: true,\r\n                                            filter: false,\r\n                                        },\r\n                                    ]}\r\n                                    light\r\n                                    hover\r\n                                    striped\r\n                                    bordered\r\n                                    sorter\r\n                                    columnFilter\r\n                                    size=\"sm\"\r\n                                    itemsPerPage={10}\r\n                                    pagination\r\n                                    scopedSlots={{\r\n                                        'Action':\r\n                                            (item) => (\r\n                                                <td>\r\n                                                    <CBadge>\r\n                                                        <CButton disabled={is_trashed(item.deleted_at)} onClick={() => delete_laptop(item.id)} type=\"button\" size=\"sm\" color=\"danger\">Delete</CButton> <CButton onClick={() => { history.push({ pathname: '/dashboard/laptops/details', state: { brand: item } }) }} size=\"sm\" type=\"button\" color=\"primary\">Edit</CButton>\r\n                                                    </CBadge>\r\n                                                </td>\r\n                                            )\r\n                                    }}\r\n                                />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n            </CContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Processors"],"sourceRoot":""}