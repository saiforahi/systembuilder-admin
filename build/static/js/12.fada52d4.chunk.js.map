{"version":3,"sources":["pages/brands/Brands.js"],"names":["Brands","history","useHistory","brands","useSelector","state","temp","Array","from","data","forEach","element","idx","push","name","className","md","to","shape","color","items","fields","key","_style","width","_classes","label","maxWidth","sorter","filter","light","hover","striped","bordered","columnFilter","size","itemsPerPage","pagination","scopedSlots","item","onClick","swal","type","pathname","brand"],"mappings":"yJAAA,kFA6EeA,UAvEA,WACX,IAAIC,EAAUC,cACRC,EAASC,aAAY,SAAAC,GACvB,IAAIC,EAAK,GAIT,OAHAC,MAAMC,KAAKH,EAAMF,OAAOM,MAAMC,SAAQ,SAACC,EAAQC,GAC3CN,EAAKO,KAAK,CAAC,IAAID,EAAI,EAAE,KAAOD,EAAQG,UAEjCR,KAEX,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMS,UAAU,qBAAhB,SACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,qCAAvB,SACI,cAAC,IAAD,CAAME,GAAG,2BAAT,SAAoC,cAAC,IAAD,CAASC,MAAM,QAAQC,MAAM,UAA7B,uBAG5C,uBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAMH,GAAG,IAAID,UAAU,cAAvB,SACI,eAAC,IAAD,CAAOA,UAAU,oBAAjB,UACI,cAAC,IAAD,UACI,0CAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CACIK,MAAOjB,EACPkB,OAAQ,CACJ,CACIC,IAAK,IACLC,OAAQ,CAAEC,MAAO,MACjBC,SAAU,oBAEd,OACA,CACIH,IAAK,SACLI,MAAO,UACPH,OAAQ,CAAEI,SAAU,MACpBC,QAAQ,EACRC,QAAQ,IAGhBC,OAAK,EACLC,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRL,QAAM,EACNM,cAAY,EACZC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAa,CACT,OACI,SAACC,GAAD,OACI,6BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAASC,QAAS,WAAQC,IAAK,UAAW,0CAA2C,YAAcC,KAAK,SAASP,KAAK,KAAKhB,MAAM,SAAjI,oBADJ,IAC+J,cAAC,IAAD,CAASqB,QAAS,WAAQvC,EAAQY,KAAK,CAAE8B,SAAU,4BAA6BtC,MAAO,CAAEuC,MAAOL,MAAaJ,KAAK,KAAKO,KAAK,SAASvB,MAAM,UAA3I","file":"static/js/12.fada52d4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport swal from 'sweetalert'\r\nimport './brands-styles.css'\r\nimport { CCard, CCardBody, CCol, CContainer, CDataTable, CRow, CButton, CBadge, CCardHeader } from '@coreui/react'\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nconst Brands = () => {\r\n    let history = useHistory()\r\n    const brands = useSelector(state=>{\r\n        let temp=[]\r\n        Array.from(state.brands.data).forEach((element,idx) => {\r\n            temp.push({'#':idx+1,'Name':element.name})\r\n        });\r\n        return temp\r\n    })\r\n    return (\r\n        <>\r\n            <CContainer>\r\n                <CRow className=\"align-items-center\">\r\n                    <CCol md=\"8\" className=\"mb-3 mb-xl-0 text-left offset-md-2\">\r\n                        <Link to=\"/dashboard/brands/create\"><CButton shape=\"round\" color=\"primary\">Add</CButton></Link>\r\n                    </CCol>\r\n                </CRow>\r\n                <hr></hr>\r\n                <CRow>\r\n                    <CCol md=\"8\" className=\"offset-md-2\">\r\n                        <CCard className=\"custom-wbs-card-1\">\r\n                            <CCardHeader>\r\n                                <h3>Brands</h3>\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CDataTable\r\n                                    items={brands}\r\n                                    fields={[\r\n                                        {\r\n                                            key: \"#\",\r\n                                            _style: { width: \"5%\" },\r\n                                            _classes: \"font-weight-bold\",\r\n                                        },\r\n                                        \"Name\",\r\n                                        {\r\n                                            key: \"Action\",\r\n                                            label: \"Actions\",\r\n                                            _style: { maxWidth: \"5%\" },\r\n                                            sorter: true,\r\n                                            filter: false,\r\n                                        },\r\n                                    ]}\r\n                                    light\r\n                                    hover\r\n                                    striped\r\n                                    bordered\r\n                                    sorter\r\n                                    columnFilter\r\n                                    size=\"sm\"\r\n                                    itemsPerPage={10}\r\n                                    pagination\r\n                                    scopedSlots={{\r\n                                        'Action':\r\n                                            (item) => (\r\n                                                <td>\r\n                                                    <CBadge>\r\n                                                        <CButton onClick={() => { swal('Warning', 'This service is not available right now', 'warning') }} type=\"button\" size=\"sm\" color=\"danger\">Delete</CButton> <CButton onClick={() => { history.push({ pathname: '/dashboard/brands/details', state: { brand: item } }) }} size=\"sm\" type=\"button\" color=\"primary\">Edit</CButton>\r\n                                                    </CBadge>\r\n                                                </td>\r\n                                            )\r\n                                    }}\r\n                                />\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n            </CContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Brands"],"sourceRoot":""}